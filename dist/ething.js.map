{"version":3,"sources":["webpack://EThing/webpack/universalModuleDefinition","webpack://EThing/webpack/bootstrap","webpack://EThing/./src/utils.js","webpack://EThing/./src/core.js","webpack://EThing/./src/resource.js","webpack://EThing/./src/deferred.js","webpack://EThing/./src/device.js","webpack://EThing/./src/deferredObject.js","webpack://EThing/./src/eventEngine.js","webpack://EThing/./src/event.js","webpack://EThing/./src/arbo.js","webpack://EThing/./src/devices/mqtt.js","webpack://EThing/./src/devices/http.js","webpack://EThing/./src/rule.js","webpack://EThing/./src/app.js","webpack://EThing/./src/table.js","webpack://EThing/./src/file.js","webpack://EThing/./src/notify.js","webpack://EThing/./src/settings.js","webpack://EThing/./src/error.js","webpack://EThing/./src/extra-browser.js","webpack://EThing/./src/ething.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","Utils","buildParams","prefix","obj","add","Array","isArray","v","test","isId","length","parseUrl","url","exec","scheme","user","password","hostname","port","path","search","hash","getParam","key","queryIndex","indexOf","regex","RegExp","encodeURIComponent","results","substr","decodeURIComponent","getQueryString","removeParam","urlparts","split","hashIndex","pars","lastIndexOf","splice","join","insertParam","query","param","data","replace","pad","width","z","sizeToString","parseInt","isNaN","Math","floor","dateToString","now","Date","getTime","getHours","getMinutes","curr_year","getFullYear","curr_date","getDate","curr_month","getMonth","dateDiffToString","diffInSec","divideBy","w","cache","createCache","requestFunction","callback","state","done","class2type","toString","hasOwn","forEach","toLowerCase","type","isPlainObject","nodeType","constructor","e","undefined","extend","options","src","copy","copyIsArray","clone","target","arguments","deep","this","isEqual","x","y","Function","valueOf","keys","every","inherits","extended","parent","utils","Deferred","Error","Event","EventEngine","DeferredObject","EThing","XMLHttpRequest","config","serverUrl","ajaxSuccessHandlers","ajaxCompleteHandlers","ajaxErrorHandlers","ajaxSendHandlers","apiRequestPrefilterHandler","toApiUrl","auth","apiUrl","isApiUrl","_processAuth","ajax","deferred","xhr","method","context","contentType","headers","dataType","converter","synchronous","apiRequest","toUpperCase","isBodyRequest","body","hasData","open","requestContentType","setRequestHeader","JSON","stringify","Blob","ArrayBuffer","Buffer","reject","error","ct","getResponseHeader","responseType","response","FileReaderSync","fileReader","String","fromCharCode","apply","Uint8Array","readAsArrayBuffer","FileReader","onload","resolve","result","when","always","parse","args","status","statusText","trigger","handler","rejectWith","err","resolveWith","onerror","onabort","onprogress","notifyWith","evt","isDefaultPrevented","send","promise","instanciate","json","extends","clsName","resourceConverter","map","filter","arbo","update","resources","request","opt","slice","apiRequestPrefilter","ajaxSend","push","ajaxComplete","ajaxSuccess","ajaxError","list","find","a","b","q","Resource","id","usage","NoAuth","_resource","_scope","_authType","isAuthenticated","getApp","App","getDevice","Device","getResource","getScope","reset","setApiKey","apiKey","xhrOrUrl","setBasicAuth","login","btoa","initialize","successFn","errorFn","resource","scope","authenticatedCb_","cb","fail","authenticated","_fromJson","noTrigger","updated","_json","modifiedDate","updatedKeys","createdBy","createdDate","description","isTypeof","dirname","basename","extension","types","baseType","t","ctime","mtime","public","defaultValue","attr","hasAttr","remove","removeChildren","set","properties","unshift","setData","children","X-HTTP-Method-Override","f","pop","fnmatch","pattern","parsedPattern","regexp","patternTab","match","D","fn","doneFuncs","failFuncs","progressFuncs","resultArgs","tuples","arr","j","progress","then","fns","newDefer","tuple","returned","notify","debug","console","log","isRejected","isResolved","df","size","rp","methods","operationId","self","binary","execute","getApi","executeUrl","location","connected","lastSeenDate","hasBattery","battery","interfaces","device","isNode","create","resolvedDfr","queue","processQueue","dfr","pending","fctname","action","event_map","on","events","event","off","one","extraParameters","h","concat","isImmediatePropagationStopped","isPropagationStopped","returnTrue","returnFalse","props","timeStamp","preventDefault","stopPropagation","stopImmediatePropagation","loaddfr","Folder","isRoot","newResources","replaceAll","removed","added","index","found","hasChanged","noTraversingUp","findOneById","folder","deferreds","filter_","fd","relativeName","ls","findOne","res","resourceId","load","force","pdfr","rs","lastRefreshTs","refresh","isLoaded","MQTT","getSubscription","dev","subs","subscription","Http","getSpecification","spec","swaggerSpecification","Rule","enabled","script","scriptReturnCode","script_return_code","scriptExecutionCount","script_execution_count","scriptExecutionDate","script_execution_date","file_id","iconLink","hasIcon","getContentUrl","contentModifiedDate","version","read","write","content","icon","reader","onloadend","readAsDataURL","bytes","byteLength","getIcon","Table","maxLength","expireAfter","k","select","computeStatistics","removeRow","replaceRow","findOneAndReplace","upsert","insert","import","table_id","fields","start","sort","datefmt","docId","postData","invalid_field","table","skip_error","File","mime","thumbnailLink","hasThumbnail","isText","isScript","file","subject","message","settings","__proto__","captureStackTrace","atob"],"mappings":"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","file":"ething.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"EThing\"] = factory();\n\telse\n\t\troot[\"EThing\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 19);\n","\nvar extra = require(\"./extra.js\");\n\nvar Utils = extra || {};\n\n\nUtils.isId = function(s){\n\treturn (typeof s == 'string' && s.length === 7 && /^[0-9a-zA-Z\\-_]+$/.test(s));\n}\n\n\nUtils.parseUrl = function(url){\n\tvar r = /^((([a-z]+):)?\\/\\/)?(([^:]*)(:([^@]*))?@)?([^:\\/?#]+)?(:([0-9]+))?([^?#]+)?(\\?[^#]*)?(#.*)?$/i.exec(url);\n\treturn r ? {\n\t\tscheme : r[3],\n\t\tuser : r[5],\n\t\tpassword : r[7],\n\t\thostname : r[8],\n\t\tport : r[10],\n\t\tpath : r[11],\n\t\tsearch : r[12],\n\t\thash: r[13]\n\t} : false;\n}\n\nUtils.getParam = function(url, key) {\n\tvar queryIndex = url.indexOf('?'); \n\tvar regex = new RegExp(\"[\\\\?&]\" + encodeURIComponent(key) + \"=([^&#]*)\"),\n\t\tresults = queryIndex!==-1 ? regex.exec(url.substr(queryIndex)) : null;\n\treturn results === null ? \"\" : decodeURIComponent(results[1]);\n}\n\nUtils.getQueryString = function(url, key) {\n\tvar queryIndex = url.indexOf('?'); \n\tvar regex = new RegExp(\"[\\\\?&]\" + encodeURIComponent(key) + \"=([^&#]*)\"),\n\t\tresults = queryIndex!==-1 ? regex.exec(url.substr(queryIndex)) : null;\n\treturn results === null ? \"\" : decodeURIComponent(results[1]);\n}\n\nUtils.removeParam = function(url,key){\n\t//prefer to use l.search if you have a location/link object\n\tvar urlparts= url.split('?');   \n\tif (urlparts.length>=2) {\n\t\t\n\t\tvar hashIndex = urlparts[1].indexOf('#'),\n\t\t\thash = '';\n\t\tif(hashIndex !== -1){\n\t\t\thash = urlparts[1].substr(hashIndex);\n\t\t\turlparts[1] = urlparts[1].substr(0,hashIndex);\n\t\t}\n\t\t\t\n\t\tvar prefix= encodeURIComponent(key)+'=';\n\t\tvar pars= urlparts[1].split(/[&;]/g);\n\n\t\t//reverse iteration as may be destructive\n\t\tfor (var i= pars.length; i-- > 0;) {    \n\t\t\t//idiom for string.startsWith\n\t\t\tif (pars[i].lastIndexOf(prefix, 0) !== -1) {  \n\t\t\t\tpars.splice(i, 1);\n\t\t\t}\n\t\t}\n\n\t\turl= urlparts[0] + (pars.length > 0 ? '?' + pars.join('&') : \"\") + hash;\n\t\treturn url;\n\t} else {\n\t\treturn url;\n\t}\n};\n\nUtils.insertParam = function(url,key,value){\n\t\n\turl = Utils.removeParam(url,key);\n\t\n\tvar hashIndex = url.indexOf('#'),\n\t\thash = '';\n\tif(hashIndex !== -1){ // extract hash\n\t\thash = url.substr(hashIndex);\n\t\turl = url.substr(0,hashIndex);\n\t}\n\t\n\tvar queryIndex = url.indexOf('?'),\n\t\tquery = '';\n\tif(queryIndex !== -1){ // extract query\n\t\tquery = url.substr(queryIndex);\n\t\turl = url.substr(0,queryIndex);\n\t}\n\t\n\tquery += query.length ? '&' : '?';\n\tquery += encodeURIComponent(key)+'='+encodeURIComponent(value);\n\t\n\treturn url+query+hash;\n};\n\n\nfunction buildParams( prefix, obj, add ) {\n\tvar name;\n\n\tif ( Array.isArray( obj ) ) {\n\t\t// Serialize array item.\n\t\tfor(var i in obj){\n\t\t\tvar v = obj[i];\n\t\t\tif ( /\\[\\]$/.test( prefix ) ) {\n\t\t\t\t// Treat each array item as a scalar.\n\t\t\t\tadd( prefix, v );\n\n\t\t\t} else {\n\t\t\t\t// Item is non-scalar (array or object), encode its numeric index.\n\t\t\t\tbuildParams( prefix + \"[\" + ( typeof v === \"object\" ? i : \"\" ) + \"]\", v, add );\n\t\t\t}\n\t\t};\n\n\t} else if ( typeof obj === \"object\" ) {\n\t\t// Serialize object item.\n\t\tfor ( name in obj ) {\n\t\t\tbuildParams( prefix + \"[\" + name + \"]\", obj[ name ], add );\n\t\t}\n\n\t} else {\n\t\t// Serialize scalar item.\n\t\tadd( prefix, obj );\n\t}\n}\nUtils.param = function(data){\n\t\n\tvar prefix,\n\t\ts = [],\n\t\tadd = function( key, value ) {\n\t\t\t// If value is a function, invoke it and return its value\n\t\t\tvalue = (typeof value == 'function') ? value() : ( value == null ? \"\" : value );\n\t\t\ts[ s.length ] = encodeURIComponent( key ) + \"=\" + encodeURIComponent( value );\n\t\t};\n\n\t// If traditional, encode the \"old\" way (the way 1.3.2 or older\n\t// did it), otherwise encode params recursively.\n\tfor ( prefix in data ) {\n\t\tif(!(data[prefix] === null || typeof data[prefix] == 'undefined'))\n\t\t\tbuildParams( prefix, data[ prefix ], add );\n\t}\n\n\t// Return the resulting serialization\n\treturn s.join( \"&\" ).replace( /%20/g, \"+\" );\n\t\n}\n\n\n\n\nvar pad = Utils.pad = function(n, width, z) {\n\tz = z || '0';\n\tn = n + '';\n\treturn n.length >= width ? n : new Array(width - n.length + 1)\n\t\t.join(z) + n;\n}\n\n\nUtils.sizeToString = function(s) {\n\ts = parseInt(s);\n\tif(isNaN(s)) return '-';\n\tvar coef = 0.9;\n\tif (s > 1000000000 * coef)\n\t\ts = (Math.floor((s / 1000000000) * 100 ) / 100) + ' GB';\n\telse if (s > 1000000 * coef)\n\t\ts = (Math.floor((s / 1000000) * 100) / 100) + ' MB';\n\telse if (s > 1000 * coef)\n\t\ts = (Math.floor((s / 1000) * 100) / 100) + ' KB';\n\telse\n\t\ts = s + ' B';\n\treturn s;\n};\n\nUtils.dateToString = function(d) {\n\tvar now = new Date();\n\t\n\tif(typeof d == 'number'){\n\t\td = new Date(d*1000);\n\t}\n\t\n\tif(!d)\n\t\treturn '-';\n\telse if(now.getTime()-d.getTime() < 86400000){\n\t\t// 22:52\n\t\treturn pad(d.getHours(),2) + ':' + pad(d.getMinutes(),2);\n\t}\n\telse {\n\t\tvar curr_year = d.getFullYear();\n\t\tvar curr_date = d.getDate();\n\t\tvar curr_month = d.getMonth();\n\t\t\n\t\tif(curr_year == now.getFullYear()){\n\t\t\t// Jul. 27\n\t\t\tvar m_names = new Array(\"Jan\", \"Feb\", \"Mar\",\n\t\t\t\t\"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\",\n\t\t\t\t\"Oct\", \"Nov\", \"Dec\");\n\t\t\treturn curr_date + ' ' + m_names[curr_month] + '.';\n\t\t}\n\t\telse {\n\t\t\t// 2014/07/27\n\t\t\treturn curr_year + '/' + pad(curr_month+1,2) + '/' + pad(curr_date,2);\n\t\t}\n\t}\n};\n\nUtils.dateDiffToString = function(diffInSec) {\n\tdiffInSec = parseInt(diffInSec);\n\tif(isNaN(diffInSec)) return '-';\n\t// transform it into interval\n\tvar divideBy = {\n\t\t\tw: 604800,\n\t\t\td: 86400,\n\t\t\th: 3600,\n\t\t\tm: 60\n\t\t},\n\t\tw = 0, // number of word\n\t\ts = '', // output string\n\t\tv;\n\tv = Math.floor(diffInSec / divideBy.w);\n\tif (v >= 1 && w < 2) {\n\t\ts += Math.floor(v) + ' week' + (v > 1 ? 's' : '');\n\t\tdiffInSec -= v * divideBy.w;\n\t\tw++;\n\t}\n\tv = Math.floor(diffInSec / divideBy.d);\n\tif (v >= 1 && w < 2) {\n\t\tif (w) s += ' ';\n\t\ts += Math.floor(v) + ' day' + (v > 1 ? 's' : '');\n\t\tdiffInSec -= v * divideBy.d;\n\t\tw++;\n\t}\n\tv = Math.floor(diffInSec / divideBy.h);\n\tif (v >= 1 && w < 2) {\n\t\tif (w) s += ' ';\n\t\ts += Math.floor(v) + ' hour' + (v > 1 ? 's' : '');\n\t\tdiffInSec -= v * divideBy.h;\n\t\tw++;\n\t}\n\tv = Math.floor(diffInSec / divideBy.m);\n\tif (v >= 1 && w < 2) {\n\t\tif (w) s += ' ';\n\t\ts += Math.floor(v) + ' minute' + (v > 1 ? 's' : '');\n\t\tdiffInSec -= v * divideBy.m;\n\t\tw++;\n\t}\n\tv = diffInSec;\n\tif (v >= 1 && w < 2) {\n\t\tif (w) s += ' ';\n\t\ts += Math.floor(v) + ' seconde' + (v > 1 ? 's' : '');\n\t\tw++;\n\t}\n\n\treturn s;\n};\n\n\nvar cache = {};// private\n\nUtils.createCache = function( requestFunction ) {\n\treturn function( key, callback ) {\n\t\tif ( !cache[key] || (typeof cache[key].state == 'function' && cache[key].state() === 'rejected') ) {\n\t\t\tcache[key] = requestFunction(key);\n\t\t}\n\t\treturn cache[key].done( callback );\n\t};\n};\n\n\n\n\n\n\n\n\nvar class2type = {},\n\ttoString = class2type.toString,\n\thasOwn = class2type.hasOwnProperty;\n\n// Populate the class2type map\n\"Boolean Number String Function Array Date RegExp Object Error Symbol\".split(\" \").forEach(function(name){\n\tclass2type[ \"[object \" + name + \"]\" ] = name.toLowerCase();\n});\n\n\nUtils.type = function( obj ) {\n\tif ( obj == null ) {\n\t\treturn obj + \"\";\n\t}\n\n\t// Support: Android<4.0, iOS<6 (functionish RegExp)\n\treturn typeof obj === \"object\" || typeof obj === \"function\" ?\n\t\tclass2type[ toString.call( obj ) ] || \"object\" :\n\t\ttypeof obj;\n};\n\nUtils.isPlainObject = function( obj ) {\n\tvar key;\n\n\t// Not plain objects:\n\t// - Any object or value whose internal [[Class]] property is not \"[object Object]\"\n\t// - DOM nodes\n\t// - window\n\tif ( Utils.type( obj ) !== \"object\" || obj.nodeType || (obj != null && obj === obj.window) ) {\n\t\treturn false;\n\t}\n\t\n\ttry {\n\t\t// Not own constructor property must be Object\n\t\tif ( obj.constructor &&\n\t\t\t\t!hasOwn.call( obj, \"constructor\" ) &&\n\t\t\t\t!hasOwn.call( obj.constructor.prototype || {}, \"isPrototypeOf\" ) ) {\n\t\t\treturn false;\n\t\t}\n\t} catch ( e ) {\n\t  // IE8,9 Will throw exceptions on certain host objects #9897\n\t  return false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own\n\tfor ( key in obj ) {}\n\n\treturn key === undefined || hasOwn.call( obj, key );\n};\n\nUtils.extend = function() {\n\tvar options, name, src, copy, copyIsArray, clone,\n\t  target = arguments[0] || {},\n\t  i = 1,\n\t  length = arguments.length,\n\t  deep = false;\n\n\t// Handle a deep copy situation\n\tif ( typeof target === \"boolean\" ) {\n\t  deep = target;\n\t  target = arguments[1] || {};\n\t  // skip the boolean and the target\n\t  i = 2;\n\t}\n\n\t// Handle case when target is a string or something (possible in deep copy)\n\tif ( typeof target !== \"object\" && typeof target !== 'function' ) {\n\t  target = {};\n\t}\n\n\tif ( length === i ) {\n\t  target = this;\n\t  --i;\n\t}\n\n\tfor ( ; i < length; i++ ) {\n\t  // Only deal with non-null/undefined values\n\t  if ( (options = arguments[ i ]) != null ) {\n\t\t// Extend the base object\n\t\tfor ( name in options ) {\n\t\t  src = target[ name ];\n\t\t  copy = options[ name ];\n\n\t\t  // Prevent never-ending loop\n\t\t  if ( target === copy ) {\n\t\t\tcontinue;\n\t\t  }\n\n\t\t  // Recurse if we're merging plain objects or arrays\n\t\t  if ( deep && copy && ( Utils.isPlainObject(copy) || (copyIsArray = Array.isArray(copy)) ) ) {\n\t\t\tif ( copyIsArray ) {\n\t\t\t  copyIsArray = false;\n\t\t\t  clone = src && Array.isArray(src) ? src : [];\n\n\t\t\t} else {\n\t\t\t  clone = src && Utils.isPlainObject(src) ? src : {};\n\t\t\t}\n\n\t\t\t// Never move original objects, clone them\n\t\t\ttarget[ name ] = Utils.extend( deep, clone, copy );\n\n\t\t  // Don't bring in undefined values\n\t\t  } else if ( copy !== undefined ) {\n\t\t\ttarget[ name ] = copy;\n\t\t  }\n\t\t}\n\t  }\n\t}\n\t// Return the modified object\n\treturn target;\n};\n\nUtils.isEqual = function(x, y) {\n\t'use strict';\n\n\tif (x === null || x === undefined || y === null || y === undefined) { return x === y; }\n\t// after this just checking type of one would be enough\n\tif (x.constructor !== y.constructor) { return false; }\n\t// if they are functions, they should exactly refer to same one (because of closures)\n\tif (x instanceof Function) { return x === y; }\n\t// if they are regexps, they should exactly refer to same one (it is hard to better equality check on current ES)\n\tif (x instanceof RegExp) { return x === y; }\n\tif (x === y || x.valueOf() === y.valueOf()) { return true; }\n\tif (Array.isArray(x) && x.length !== y.length) { return false; }\n\n\t// if they are dates, they must had equal valueOf\n\tif (x instanceof Date) { return false; }\n\n\t// if they are strictly equal, they both need to be object at least\n\tif (!(x instanceof Object)) { return false; }\n\tif (!(y instanceof Object)) { return false; }\n\n\t// recursive object equality check\n\tvar p = Object.keys(x);\n\treturn Object.keys(y).every(function (i) { return p.indexOf(i) !== -1; }) &&\n\t\tp.every(function (i) { return Utils.isEqual(x[i], y[i]); });\n}\n\n\nUtils.inherits = function (extended, parent){\n\textended.prototype = new parent();\n\textended.prototype.constructor = extended; // fix constructor property\n};\n\t\n\nmodule.exports = Utils;\n\n","\nvar utils = require(\"./utils.js\");\nvar Deferred = require(\"./deferred.js\");\nvar Error = require(\"./error.js\");\nvar Event = require(\"./event.js\");\nvar EventEngine = require(\"./eventEngine.js\");\nvar DeferredObject = require(\"./deferredObject.js\");\n\n\n/**\n * Contains all eThing API classes and functions.\n * @namespace EThing\n */\nvar EThing = {};\n\n\nvar extend = utils.extend;\nvar isPlainObject = utils.isPlainObject;\n\nvar XMLHttpRequest = utils.XMLHttpRequest;\n\n\nEThing.Event = Event;\nEThing.Error = Error;\n\nEThing.utils = utils;\nEThing.utils.Deferred = Deferred;\n\nEThing.DeferredObject = DeferredObject;\n\nEThing.config = {\n\tserverUrl: 'http://localhost:8000'\n};\n\n\nvar ajaxSuccessHandlers = [],\n\tajaxCompleteHandlers = [],\n\tajaxErrorHandlers = [],\n\tajaxSendHandlers = [],\n\tapiRequestPrefilterHandler = null;\n\n\n\n\n\n/**\n * register an handler to an event.\n * @name on\n * @memberof EThing\n * @param {string} event event type string. Multiple space separated events can be given.\n * @param {function(EThing.Event)} handler the function to be called when the event has been triggered.\n */\n\n/**\n * Remove an event handler.\n * @name off\n * @memberof EThing\n * @param {string} event event type string. Multiple space separated events can be given.\n * @param {function(EThing.Event)} [handler] A handler function previously attached for the event(s)\n */\n\n/**\n * register an handler to an event. The handler will be only executed once.\n * @name one\n * @memberof EThing\n * @param {string} event event type string. Multiple space separated events can be given.\n * @param {function(EThing.Event)} handler the function to be called when the event has been triggered.\n */\n\n/**\n * Execute all handlers attached for the given event type.\n * @name trigger\n * @memberof EThing\n * @param {string|EThing.Event} event An event object instance or an event type string.\n * @param {object} [extraParameters] Additional parameters to pass along to the event handler.\n */\n\n\n/**\n * @memberof EThing\n * @event \"ething.resource.removed\"\n */\n \n/**\n * @memberof EThing\n * @event \"ething.file.created\"\n */\n \n/**\n * @memberof EThing\n * @event \"ething.table.created\"\n */\n \n/**\n * @memberof EThing\n * @event \"ething.device.created\"\n */\n \n/**\n * @memberof EThing\n * @event \"ething.app.created\"\n */\n/**\n * authenticated event.\n *\n * @memberof EThing\n * @event \"ething.authenticated\"\n */\nEventEngine(EThing);\n\n\n\n// only absolute url will be preserved untouched,\n// else api server url is prepended\nEThing.toApiUrl = function(url, auth){\n\turl = url || '';\n\t\n\tif(!/^([a-z]+:)?\\/\\//.test(url)){\n\t\t// relative url\n\t\tif(!/^\\//.test(url) && url)\n\t\t\turl = '/'+url;\n\t\t\n\t\turl = apiUrl() + url;\n\t}\n\t\n\tif(auth && isApiUrl(url)){\n\t\turl = _processAuth(url);\n\t\tif(typeof apiRequestPrefilterHandler == 'function')\n\t\t\turl = apiRequestPrefilterHandler(url);\n\t}\n\treturn url;\n}\n\n// returns true if it is an URL to the HTTP API\nvar isApiUrl = function(url){\n\treturn (new RegExp('^([a-z]+:)?//'+apiUrl().replace(/^([a-z]+:)?\\/\\//,''))).test(url);\n}\n\n\nvar apiUrl = function(){\n\treturn EThing.config.serverUrl.replace(/\\/+$/, '') + '/api';\n}\n\nEThing.apiUrl = function(){\n\treturn EThing.toApiUrl();\n}\n\n\n\nvar ajax = function(options){\n\tvar deferred = new Deferred(),\n\t\txhr = new XMLHttpRequest();\n\t\n\tif(typeof options == 'string')\n\t\toptions = {\n\t\t\turl: options\n\t\t};\n\t\n\toptions = extend({\n\t\tmethod: 'GET',\n\t\tcontext: null,\n\t\turl: null,\n\t\tdata: null,\n\t\tcontentType: null, // When sending data to the server, use this content type , default to 'application/x-www-form-urlencoded; charset=UTF-8'\n\t\theaders: null,\n\t\tdataType: null, // The type of data that you're expecting back from the server (json -> {object}, text -> {string} , arraybuffer, blob -> (not available on nodejs), buffer (nodejs only) )\n\t\tconverter: null, // a user defined function to convert the receive data into something else ...\n\t\tsynchronous: false\n\t},options);\n\t\n\t\n\tif(typeof options.url != 'string')\n\t\treturn null;\n\t\n\tvar url = EThing.toApiUrl(options.url);\n\tvar apiRequest = isApiUrl(url);\n\t\n\t\n\toptions.method = options.method.toUpperCase();\n\t\n\tvar context = options.context || EThing;\n\t\n\tvar isBodyRequest = !/^(?:GET|HEAD)$/.test( options.method ),\n\t\tbody = undefined,\n\t\thasData = typeof options.data != 'undefined' && options.data !== null;\n\t\n\t\n\t\n\t// If data is available, append data to url\n\tif ( !isBodyRequest && hasData ){\n\t\t// GET, HEAD request, append the data to the query string\n\t\turl += ( /\\?/.test( url ) ? \"&\" : \"?\" ) + ( typeof options.data == 'string' ? options.data : utils.param(options.data));\n\t}\n\t\n\t\n\txhr.open(options.method, url, !options.synchronous);\n\t\n\t\n\t// user headers\n\tvar requestContentType = null;\n\tif(isPlainObject(options.headers)){\n\t\tfor(var i in options.headers){\n\t\t\tif(options.headers.hasOwnProperty(i)){\n\t\t\t\tif(/^content-type$/i.test(i)){\n\t\t\t\t\trequestContentType = options.headers[i];\n\t\t\t\t}\n\t\t\t\txhr.setRequestHeader(i, options.headers[i]);\t\n\t\t\t}\n\t\t}\n\t}\n\t\n\t// content-type header\n\tif(!requestContentType && options.contentType)\n\t\txhr.setRequestHeader('Content-Type', requestContentType = options.contentType);\n\t\n\tif(isBodyRequest && hasData){\n\t\t\n\t\tif(requestContentType){\n\t\t\t\n\t\t\tbody = options.data;\n\t\t\t\n\t\t\tif(isPlainObject(options.data) || Array.isArray(options.data)){\n\t\t\t\t// transform the data according to the content-type\n\t\t\t\tif(/json/i.test(requestContentType))\n\t\t\t\t\tbody = JSON.stringify(options.data)\n\t\t\t\telse if(/application\\/x-www-form-urlencoded/i.test(requestContentType))\n\t\t\t\t\tbody = utils.param(options.data);\n\t\t\t}\n\t\t\t\n\t\t} else {\n\t\t\t// no content-type set, set to defaults\n\t\t\tif(options.data instanceof Blob){\n\t\t\t\txhr.setRequestHeader('Content-Type', requestContentType = options.data.type);\n\t\t\t\tbody = options.data;\n\t\t\t} else if( (options.data instanceof ArrayBuffer) || (options.data instanceof utils.Buffer) ){\n\t\t\t\txhr.setRequestHeader('Content-Type', requestContentType = 'application/octet-stream');\n\t\t\t\tbody = options.data;\n\t\t\t} else {\n\t\t\t\txhr.setRequestHeader('Content-Type', requestContentType = 'application/x-www-form-urlencoded; charset=UTF-8');\n\t\t\t\tbody = typeof options.data == 'string' ? options.data : utils.param(options.data);\n\t\t\t}\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t\n\t// authentication\n\tif(apiRequest){\n\t\txhr = _processAuth(xhr);\n\t\tif(typeof apiRequestPrefilterHandler == 'function')\n\t\t\txhr = apiRequestPrefilterHandler(xhr);\n\t}\n\t\n\t// responseType\n\tvar dataType = options.dataType;\n\tif(dataType && dataType != 'auto') xhr.responseType = dataType;\n\t\n\tfunction reject(error){\n\t\t\n\t\tvar ct = xhr.getResponseHeader(\"Content-Type\") || '',\n\t\t\tdata = null;\n\t\t\n\t\tif(typeof error != 'undefined'){\n\t\t\tdata = error;\n\t\t}\n\t\telse if(/json/.test(ct) || /text\\/plain/.test(ct)){\n\t\t\t\n\t\t\t\n\t\t\tswitch(xhr.responseType){\n\t\t\t\t\n\t\t\t\tcase '':\n\t\t\t\tcase 'text':\n\t\t\t\tcase 'json':\n\t\t\t\t\tdata = xhr.response;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'blob':\n\t\t\t\t\t\n\t\t\t\t\tif(options.synchronous){\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(!utils.FileReaderSync){\n\t\t\t\t\t\t\tthrow new Error(\"FileReaderSync not supported.\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar fileReader = new utils.FileReaderSync();\n\t\t\t\t\t\tdata = String.fromCharCode.apply(null, new Uint8Array(fileReader.readAsArrayBuffer(xhr.response)));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdata = Deferred();\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(!utils.FileReader){\n\t\t\t\t\t\t\tthrow new Error(\"FileReaderSync not supported.\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar fileReader = new utils.FileReader();\n\t\t\t\t\t\tfileReader.onload = function() {\n\t\t\t\t\t\t\tdata.resolve( String.fromCharCode.apply(null, new Uint8Array(this.result)) );\n\t\t\t\t\t\t};\n\t\t\t\t\t\tfileReader.readAsArrayBuffer(xhr.response);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'arraybuffer':\n\t\t\t\t\tdata = String.fromCharCode.apply(null, new Uint8Array(xhr.response));\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'buffer':\n\t\t\t\t\tdata = xhr.response.toString(\"utf8\");\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(xhr.responseType+\" response type not supported.\");\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tDeferred.when(data).always(function(data){\n\t\t\t\n\t\t\ttry{\n\t\t\t\tdata = JSON.parse(data);\n\t\t\t} catch(e){}\n\t\t\t\n\t\t\tvar error = new Error(data || (xhr.status ? (xhr.status+' ['+xhr.statusText+']') : 'unknown error')),\n\t\t\t\targs = [error,xhr,options];\n\t\t\t\n\t\t\tEThing.trigger('ething.request.error',args);\n\t\t\tajaxErrorHandlers.forEach(function(handler){\n\t\t\t\thandler.apply(context,args);\n\t\t\t});\n\t\t\tEThing.trigger('ething.request.complete',args);\n\t\t\tajaxCompleteHandlers.forEach(function(handler){\n\t\t\t\thandler.apply(context,args);\n\t\t\t});\n\t\t\tdeferred.rejectWith(context,args);\n\t\t\t\n\t\t});\n\t\t\n\t\t\n\t}\n\t\n\tfunction resolve(data){\n\t\tvar args = [data,xhr,options];\n\t\t\n\t\tEThing.trigger('ething.request.success',args);\n\t\tajaxSuccessHandlers.forEach(function(handler){\n\t\t\thandler.apply(context,args);\n\t\t});\n\t\tEThing.trigger('ething.request.complete',args);\n\t\tajaxCompleteHandlers.forEach(function(handler){\n\t\t\thandler.apply(context,args);\n\t\t});\n\t\tdeferred.resolveWith(context,args);\n\t}\n\t\n\t// events\n\txhr.onload=function(){\n\t\tvar success = xhr.status >= 200 && xhr.status < 300 || xhr.status === 304;\n\t\tif (success) {  \n\t\t\t// success\n\t\t\tvar data = xhr.response;\n\t\t\t\n\t\t\tif(dataType == 'auto'){\n\t\t\t\tif(/json/.test(xhr.getResponseHeader(\"Content-Type\") || '')){\n\t\t\t\t\ttry {\n\t\t\t\t\t\tdata = JSON.parse(data);\n\t\t\t\t\t} catch(err){}\n\t\t\t\t}\n\t\t\t} else if(dataType == 'json' && typeof data === 'string'){ // for ie compatibility\n\t\t\t\ttry {\n\t\t\t\t\tdata = JSON.parse(data);\n\t\t\t\t} catch(err){}\n\t\t\t}\n\t\t\t\n\t\t\tif(typeof options.converter == 'function'){\n\t\t\t\tdata = options.converter.call(context,data,xhr,options);\n\t\t\t}\n\t\t\t\n\t\t\tresolve(data);\n\t\t}\n\t\telse\n\t\t\treject();\n\t}\n\txhr.onerror=function(err){reject(err);};\n\txhr.onabort=function(){reject();};\n\txhr.onprogress=function(e){\n\t\tdeferred.notifyWith(context,[e,xhr,options]);\n\t}\n\t\n\tvar evt = Event('ething.request.send');\n\tEThing.trigger(evt,[xhr, options]);\n\t\n\tif(evt.isDefaultPrevented()){\n\t\treject('Aborded');\n\t}\n\telse {\n\t\n\t\tajaxSendHandlers.forEach(function(handler){\n\t\t\thandler.call(context,xhr);\n\t\t});\n\t\t\n\t\txhr.send(body);\n\t\t\n\t}\n\t\n\treturn deferred.promise();\n}\n\n\n\n\nvar instanciate = EThing.instanciate = function (json){\n    \n    for(var i in json.extends){\n        var clsName = json.extends[i];\n        \n        if(typeof EThing[clsName] != 'undefined'){\n            return new EThing[clsName](json)\n        }\n        \n    }\n    \n\treturn false;\n}\n\n\n\n\n\n// if the argument is a json object describing a resource, then it converts it into a Resource instance, else it returns the object unchanged\nEThing.resourceConverter = function(data){\n\t\n\tif(typeof data == 'object' && data !== null){\n\t\t\n\t\tvar isArray = Array.isArray(data);\n\t\tif(!isArray) data = [data];\n\t\t\n\t\t// convert into resource instance\n\t\tdata = data.map(function(r){\n\t\t\treturn EThing.instanciate(r);\n\t\t}).filter(function(r){\n\t\t\treturn r;\n\t\t});\n\t\t\n\t\t\n\t\t// update the arbo collection with the new properties\n\t\t// and return the corresponding resource object(s)\n\t\tif(EThing.arbo)\n\t\t\tdata = EThing.arbo.update(data).resources;\n\t\t\n\t\tif(!isArray) data = data.length ? data[0] : null;\n\t}\n\t\n\treturn data;\n}\n\n\n\n\n/**\n * Make a HTTP request. The options object contains the following properties :\n *  - url {string} __required__ The url of the request. The API url will be prepended to relative URLs.\n *  - method {string} The HTTP request method to use. Default is GET.\n *  - data {string|object|Blob|ArrayBuffer|Buffer} The query string for GET request. The HTTP request body for POST|PATCH|PUT requests. If an object is given, it will be serialized into a query string.\n *  - contentType {string} When sending data to the server, use this content type. Default is 'application/octet-stream' if the data is an instance of ArrayBuffer or Buffer, if data is an instance of Blob, the default will be the type of the data itself, else 'application/x-www-form-urlencoded; charset=UTF-8'.\n *  - dataType {string} The type of data that you're expecting back from the server. See {@link http://xhr.spec.whatwg.org/#the-responsetype-attribute|XMLHttpRequest standard}.\n *  - headers {object} Additional HTTP request headers.\n *  - context {object} The value of this provided for the call of the callbacks\n *  - converter {function(data,XHR)} A function that returns the transformed value of the response\n *\n * \n * You may also give a callback as a second parameter. This callback is executed when the request is complete whether in failure or success.\n * On success, it receives the returned request data, as well as the XMLHttpRequest object.\n * On failure, the first parameter will be a Error object describing the error.\n * To check if a request is in failure :\n * <pre><code>EThing.request(options,function(data,xhr){\n *     if(data instanceof EThing.Error){\n *       // an error occurs, print the associated message\n *       console.log(data.message);\n *     }\n *   })`\n * </code></pre>\n *\n *\n * This function returns a {@link http://api.jquery.com/category/deferred-object/|jQuery like Promise object} object.\n *\n * The done|fail|always functions take the same parameters than the {@link http://api.jquery.com/category/deferred-object/|jQuery version}.\n *\n *\n *\n * @method EThing.request\n * @param {string|object} options a set of key/value pairs that configure the request. If an URL is given, a GET request with the default options is made.\n * @param {function(data,XHR,options)} [callback] it is executed once the request is complete whether in failure or success\n * @returns {Deferred} a {@link http://api.jquery.com/category/deferred-object/|jQuery like Promise object}\n * @example\n * // GET request\n * EThing.request('/resources') // is equivalent to EThing.list()\n *\n * // pass an object to make more complex request\n * // store some data in a file\n * EThing.request({\n *   url: '/files/'+fileId,\n *   method: 'PUT',\n *   data: 'some content here ...',\n *   contentType: 'text/plain'\n * })\n * .done(function(file){\n *   console.log(\"the content was stored in the file \"+file.name());\n * })\n * .fail(function(error){\n *   console.log(\"an error occurs : \"+error.message);\n * });\n */\n// opt : same as ajax options or an url\nEThing.request = function(opt,callback){\n\tvar d = ajax(opt);\n\t\n\tif(typeof callback == 'function') {\n\t\td.always(function(){\n\t\t\tcallback.apply(this,Array.prototype.slice.call(arguments));\n\t\t});\n\t}\n\t\n\t// if sync return the result instead of the deferred object !\n\tif(opt.synchronous){\n\t\tvar result = null;\n\t\td.always(function(r){\n\t\t\tresult = r;\n\t\t});\n\t\treturn result;\n\t} else {\n\t\treturn d;\n\t}\n}\n\n\n/**\n*\n*/\nEThing.apiRequestPrefilter = function(handler){\n\tapiRequestPrefilterHandler = handler;\n}\n/**\n * Register a handler to be called just before API requests is sent.\n *\n * @method EThing.ajaxSend\n * @param {function(XHR)} handler The function to be invoked.\n */\nEThing.ajaxSend = function(handler){\n\tif(typeof handler == 'function'){\n\t\tajaxSendHandlers.push(handler);\n\t}\n}\n/**\n * Register a handler to be called when API requests complete.\n *\n * @method EThing.ajaxComplete\n * @param {function(data,XHR,options)} handler The function to be invoked.\n */\nEThing.ajaxComplete = function(handler){\n\tif(typeof handler == 'function'){\n\t\tajaxCompleteHandlers.push(handler);\n\t}\n}\n/**\n * Register a handler to be called when API requests complete successfully.\n *\n * @method EThing.ajaxSuccess\n * @param {function(data,XHR,options)} handler The function to be invoked.\n */\nEThing.ajaxSuccess = function(handler){\n\tif(typeof handler == 'function'){\n\t\tajaxSuccessHandlers.push(handler);\n\t}\n}\n/**\n * Register a handler to be called when API requests complete with an error.\n *\n * @method EThing.ajaxError\n * @param {function(data,XHR,options)} handler The function to be invoked.\n */\nEThing.ajaxError = function(handler){\n\tif(typeof handler == 'function'){\n\t\tajaxErrorHandlers.push(handler);\n\t}\n}\n\n\n\n\n\n\n/**\n * This function get the available resources. A filter may be given to retrieve resources with specific attributes (see the HTTP API for more details).\n * @method EThing.list\n * @param {string} [query] Query string for searching resources\n * @param {function(data,XHR,options)} [callback] it is executed once the request is complete whether in failure or success\n * @returns {Deferred} a {@link http://api.jquery.com/category/deferred-object/|jQuery like Promise object}. {@link EThing.request|More ...} \n * @example\n * // get all the resources\n * EThing.list().done(function(resources){\n *     console.log(resources);\n * })\n *\n * // get only File & Table resources\n * EThing.list('type == \"File\" or type == \"Table\"').done(function(resources){\n *     console.log(resources);\n * })\n */\nEThing.list = EThing.find = function(a,b)\n{\n\tvar query = null, callback = null;\n\t\n\tif(arguments.length==1){\n\t\tif(typeof arguments[0] == 'function')\n\t\t\tcallback = arguments[0];\n\t\telse\n\t\t\tquery = arguments[0];\n\t}\n\telse if(arguments.length>=2){\n\t\tquery = arguments[0];\n\t\tcallback = arguments[1];\n\t}\n\t\n\treturn EThing.request({\n\t\t'url': '/resources?' + utils.param({'q':query}),\n\t\t'method': 'GET',\n\t\t'dataType': 'json',\n\t\t'converter': EThing.resourceConverter\n\t},callback);\n};\n\n\n/**\n * Gets a resource by its id.\n *\n * @method EThing.get\n * @param {string|EThing.Resource} resourceIdentifier\n * @param {function(data,XHR,options)} [callback] it is executed once the request is complete whether in failure or success\n * @returns {Deferred} a {@link http://api.jquery.com/category/deferred-object/|jQuery like Promise object}. {@link EThing.request|More ...} \n * @example\n * // get a resource by its id\n * EThing.get(\"54516eb\").done(function(resource){\n *     console.log('the name is ' + resource.name());\n * })\n */\nEThing.get = function(a,b)\n{\n\tvar context;\n\tif(a instanceof EThing.Resource){\n\t\tcontext = a;\n\t\ta = a.id();\n\t}\n\telse if(!utils.isId(a)) {\n\t\tthrow \"First argument must be a Resource object or a Resource id : \"+a;\n\t\treturn;\n\t}\n\t\n\tvar callback = b;\n\t\n\treturn EThing.request({\n\t\t'url': '/resources/' + a,\n\t\t'dataType': 'json',\n\t\t'method': 'GET',\n\t\t'context': context,\n\t\t'converter': EThing.resourceConverter\n\t},callback);\n};\n\n\n/**\n * Gets an object containing informations about space usage :\n *  - used {number} the amount of space used in bytes\n *  - quota_size {number} the maximum space authorized in bytes\n *\n * @method EThing.usage\n * @param {function(data,XHR,options)} [callback] it is executed once the request is complete whether in failure or success\n * @returns {Deferred} a {@link http://api.jquery.com/category/deferred-object/|jQuery like Promise object}. {@link EThing.request|More ...} \n * @example\n * // get the occupied space :\n * EThing.usage().done(function(usage){\n *     console.log('space used : ' + (100 * usage.used / usage.quota_size) );\n * })\n */\nEThing.usage = function(a)\n{\n\tvar callback = a;\n\t\n\treturn EThing.request({\n\t\t'url': '/usage',\n\t\t'dataType': 'json',\n\t\t'method': 'GET'\n\t},callback);\n};\n\n\n\n\n\n\n\n\n\n/*\n * AUTH\n */\n\nvar NoAuth = function(a){ return a; };\n\n\n// private\nvar _resource = null,\n\t_scope = null,\n\t_authType = null,\n\t_processAuth = NoAuth; // function(xhr|url) -> return xhr|url\n\n\n\n/**\n * @namespace EThing.auth\n */\n\nEThing.auth = {};\n\n\n\n/**\n * Returns true if the authentication process has been successful.\n * @method EThing.auth.isAuthenticated\n * @returns {boolean}\n */\nEThing.auth.isAuthenticated = function(){\n\treturn !!_authType;\n}\n\n/**\n * Returns the authenticated app. Only available with app's apikey authentication.\n * @method EThing.auth.getApp\n * @returns {EThing.App} the authenticated app or null.\n */\nEThing.auth.getApp = function(){\n\treturn _resource instanceof EThing.App ? _resource : null;\n}\n\n/**\n * Returns the authenticated app. Only available with devices's apikey authentication.\n * @method EThing.auth.getDevice\n * @returns {EThing.Device} the authenticated device or null.\n */\nEThing.auth.getDevice = function(){\n\treturn _resource instanceof EThing.Device ? _resource : null;\n}\n\n/**\n * Returns the authenticated resource. Only available with apikey authentication.\n * @method EThing.auth.getResource\n * @returns {EThing.Resource} the authenticated resource or null.\n */\nEThing.auth.getResource = function(){\n\treturn _resource;\n}\n\n/**\n * Returns the scope of the current authentication\n * @method EThing.auth.getScope\n * @returns {string} the scope. May be an empty string if no permissions is set. May be null if full permissions.\n */\nEThing.auth.getScope = function(){\n\treturn _scope;\n}\n\n\n\n/**\n * Reset authentication. You must restart an authentication process to make API calls again.\n * @method EThing.auth.reset\n */\nEThing.auth.reset = function(){\n\t_resource = null;\n\t_authType = null;\n\t_scope = null;\n\t_processAuth = NoAuth;\n}\n\n\n\n\nEThing.auth.setApiKey = function(apiKey){\n\t\n\tEThing.auth.reset();\n\t\n\t_processAuth = function(xhrOrUrl){\n\t\t\n\t\tif(typeof xhrOrUrl == 'string')\n\t\t\txhrOrUrl = EThing.utils.insertParam(xhrOrUrl, 'api_key', apiKey);\n\t\telse \n\t\t\txhrOrUrl.setRequestHeader('X-API-KEY', apiKey);\n\t\t\n\t\treturn xhrOrUrl;\n\t};\n\t\n};\n\nEThing.auth.setBasicAuth = function(login, password){\n\t\n\tEThing.auth.reset();\n\t\n\t_processAuth = function(xhrOrUrl){\n\t\t\n\t\tif(typeof xhrOrUrl == 'string')\n\t\t\txhrOrUrl = xhrOrUrl.replace(/\\/\\/([^:]+:[^@]+@)?/, '//'+login+':'+password+'@');\n\t\telse \n\t\t\txhrOrUrl.setRequestHeader(\"Authorization\", \"Basic \" + utils.btoa(login + \":\" + password));\n\t\t\n\t\treturn xhrOrUrl;\n\t};\n};\n\n\n\n\n/**\n * Initialize the eThing library.\n *\n * @method EThing.initialize\n * @param {Object} options\n * @param {number} options.serverUrl The URL of your eThing server (e.g. http://hostname:8000 ).\n * @param {number} [options.apiKey] Authenticate with an API key.\n * @param {number} [options.login] Basic Authentication login (Should be used only server side i.e. NodeJS).\n * @param {number} [options.password] Basic Authentication password (Should be used only server side i.e. NodeJS).\n * @param {function(EThing.Error)} [errorFn] it is executed on authentication error.\n * @returns {Deferred} a {@link http://api.jquery.com/category/deferred-object/|jQuery like Promise object}\n * @fires EThing#ething.authenticated\n * @example\n *\n * EThing.initialize({\n *    serverUrl: 'http://hostname:8000',\n *    apiKey: 'a4e28b3c-1f05-4a62-95f7-c12453b66b3c'\n *  }, function(){\n *    // on authentication success\n *    alert('connected !');\n *  }, function(error) {\n *    // on authentication error\n *    alert(error.message);\n *  });\n *\n */\nEThing.initialize = function(options, successFn, errorFn){\n\t\n\tEThing.auth.reset();\n\t\n\toptions = extend({\n\t\tserverUrl: null,\n\t\t// auth apikey\n\t\tapiKey: null,\n\t\t// auth basic\n\t\tlogin: 'ething',\n\t\tpassword:null\n\t},options || {});\n\t\n\tif(options.serverUrl)\n\t\tEThing.config.serverUrl = options.serverUrl;\n\t\n\t\n\tif(options.apiKey)\n\t\tEThing.auth.setApiKey(options.apiKey);\n\telse if(options.login && options.password)\n\t\tEThing.auth.setBasicAuth(options.login, options.password);\n\t\n\treturn EThing.request({\n\t\t'url': '/auth',\n\t\t'dataType': 'json',\n\t\t'context': EThing,\n\t\t'converter': function(data){\n\t\t\t_authType = data.type;\n\t\t\tif(data.resource)\n\t\t\t\t_resource = EThing.instanciate(data.resource);\n\t\t\tif(data.scope)\n\t\t\t\t_scope = data.scope;\n\t\t}\n\t}).done(function(){\n\t\t\n\t\tauthenticatedCb_.forEach(function(cb){\n\t\t\tcb.call(EThing);\n\t\t});\n\t\t\n\t\tEThing.trigger('ething.authenticated');\n\t}).done(successFn).fail(errorFn);\n\t\n}\n\n\n/**\n * Register a handler to be executed once the authentication is complete.\n *\n * @method EThing.authenticated\n * @param {function()} callback it is executed on authentication success.\n *\n */\nvar authenticatedCb_ = [];\nEThing.authenticated = function(callback){\n\t\n\tif(typeof callback == 'function'){\n\t\tauthenticatedCb_.push(callback);\n\t\t\n\t\tif(EThing.auth.isAuthenticated()){\n\t\t\tcallback.call(EThing);\n\t\t}\n\t}\n}\n\nmodule.exports = EThing;\n\n","\nvar utils = require(\"./utils.js\");\nvar EventEngine = require(\"./eventEngine.js\");\nvar DeferredObject = require(\"./deferredObject.js\");\nvar EThing = require(\"./core.js\");\n\n\n/**\n * Base class of all the resources\n * @protected\n * @class\n * @memberOf EThing\n * @param {object} json\n */\nvar Resource = function (json)\n{\n\tDeferredObject.call(this);\n\t\n\tEventEngine(this);\n\t\n\tthis._fromJson(json, true);\n}\nutils.inherits(Resource,DeferredObject);\n\n// loader\nResource.prototype._fromJson = function(json, noTrigger){\n\t\n\tvar updated = this._json && json && this._json.modifiedDate && json.modifiedDate && this._json.modifiedDate !== json.modifiedDate;\n\tvar updatedKeys = [];\n\t\n\tjson = utils.extend({\n\t\tname:null,\n\t\tid:null,\n\t\ttype:null,\n        extends: [],\n\t\tcreatedBy:null,\n\t\tcreatedDate: 0,\n\t\tmodifiedDate: 0,\n\t\tdata: null,\n\t\tdescription: ''\n\t}, json || {});\n\t\n\tif(!noTrigger && updated) {\n\t\t// list the kays that have been updated\n\t\tObject.keys(json).forEach(function(key){\n\t\t\tif((typeof this._json[key] === 'undefined') || !utils.isEqual(json[key],this._json[key])){\n\t\t\t\tupdatedKeys.push(key);\n\t\t\t}\n\t\t},this);\n\t}\n\t\n\tthis._json = json;\n\t\n\tif(!noTrigger && updated) {\n\t\t//console.log('resource updated '+this.name());\n\t\tthis.trigger('updated', [updatedKeys]);\n\t\tEThing.trigger('ething.resource.updated',[this, updatedKeys]);\n\t}\n\t\n\treturn updated;\n}\n\n\n/**\n *  Returns the representation of this instance\n * @this {EThing.Resource}\n * @returns {object}\n */\nResource.prototype.json = function(){\n\treturn this._json;\n}\n\n/**\n * Return true if the resource is of the given type.\n * @this {EThing.Resource}\n * @param {string} type\n * @returns {boolean}\n */\nResource.prototype.isTypeof = function(type) {\n\treturn this._json.extends.indexOf(type) !== -1;\n}\n\n// path accessors\n/**\n * Returns the name of this resource. A name is constructed as __PathName/FileName__.\n * To get only the FileName, see {@link EThing.Resource#basename}.\n * To get only the PathName, see {@link EThing.Resource#dirname}.\n * @this {EThing.Resource}\n * @returns {string}\n */\nResource.prototype.name = function() {\n\treturn this._json.name;\n}\n/**\n * Returns the path of this resource\n * @this {EThing.Resource}\n * @returns {string}\n */\nResource.prototype.dirname = function() {\n\treturn EThing.Resource.dirname(this._json.name);\n}\n/**\n * Returns the basename of this resource\n * @this {EThing.Resource}\n * @returns {string}\n */\nResource.prototype.basename = function() {\n\treturn EThing.Resource.basename(this._json.name);\n}\n/**\n * Returns the extension of this resource\n * @this {EThing.Resource}\n * @returns {string}\n */\nResource.prototype.extension = function(){\n\treturn EThing.Resource.extension(this._json.name);\n}\n/**\n * Returns the id of this resource. This id is unique and immutable.\n * @this {EThing.Resource}\n * @returns {string}\n */\nResource.prototype.id = function(){\n\treturn this._json.id;\n}\n/**\n * Returns the id of the Resource which creates it if any, or returns null.\n * @this {EThing.Resource}\n * @returns {string|null}\n */\nResource.prototype.createdBy = function(){\n\treturn this._json.createdBy;\n}\n\n/**\n *  Returns the type of this resource :\n *  - \"File\"\n *  - \"Table\"\n *  - \"App\"\n *  - \"Device\"\n * @this {EThing.Resource}\n * @returns {string}\n */\nResource.prototype.type = function() {\n\treturn this._json.type;\n}\n\n/**\n *  Returns the types this resource depends on\n * @this {EThing.Resource}\n * @returns {string[]}\n */\nResource.prototype.types = function() {\n\treturn this._json.extends || [];\n}\n\n/**\n *  Returns the type of this resource :\n *  - \"File\"\n *  - \"Table\"\n *  - \"App\"\n *  - \"Device\"\n * @this {EThing.Resource}\n * @returns {string}\n */\nResource.prototype.baseType = function() {\n\tt = this.types()\n\treturn t[t.length - 1];\n}\n\n/**\n * Create time for this resource\n * @this {EThing.Resource}\n * @returns {Date}\n */\nResource.prototype.createdDate = function() {\n\treturn new Date(this._json.createdDate);\n}\nResource.prototype.ctime = function(){\n\treturn this.createdDate();\n}\n\n/**\n * Last time this resource was modified\n * @this {EThing.Resource}\n * @returns {Date}\n */\nResource.prototype.modifiedDate = function() {\n\treturn new Date(this._json.modifiedDate);\n}\nResource.prototype.mtime = function(){\n\treturn this.modifiedDate();\n}\n\n/**\n * Tells if this resource is publicly available.\n * @this {EThing.Resource}\n * @returns {boolean|string}\n */\nResource.prototype.public = function() {\n\treturn this._json.public || false;\n}\n\n/**\n * Returns the data attached to this resource.\n * @param {string} [name] an optional data attribute name.\n * @param {} [defaultValue] a default value if the attribute was not found.\n * @this {EThing.Resource}\n * @returns {object|null}\n */\nResource.prototype.data = function(name, defaultValue) {\n\tif(typeof name == 'undefined')\n\t\treturn this._json.data;\n\telse {\n\t\treturn this._json.data.hasOwnProperty(name) ? this._json.data[name] : defaultValue;\n\t}\n}\n\n/**\n * Returns the attributes to this resource.\n * @param {string} [name] an optional attribute name.\n * @this {EThing.Resource}\n * @returns {object|null}\n */\nResource.prototype.attr = function(name) {\n\tif(typeof name == 'undefined')\n\t\treturn this._json;\n\telse {\n\t\treturn this._json.hasOwnProperty(name) ? this._json[name] : null;\n\t}\n}\n\n/**\n * Returns true if the attribute exists for this resource.\n * @param {string} name attribute name.\n * @this {EThing.Resource}\n * @returns {boolean}\n */\nResource.prototype.hasAttr = function(name) {\n\treturn this._json.hasOwnProperty(name);\n}\n\n/**\n * Returns the description of this resource\n * @this {EThing.Resource}\n * @returns {string}\n */\nResource.prototype.description = function() {\n\treturn this._json.description || \"\";\n}\n\n// resource modificators (async)\n/**\n * Remove this resource.\n * @this {EThing.Resource}\n * @param {Boolean} [removeChildren] When true, the children are also removed. Default to false.\n * @param {function(data,XHR,options)} [callback] it is executed once the request is complete whether in failure or success\n * @returns {EThing.Resource} The instance on which this method was called.\n * @fires EThing#ething.resource.removed\n * @example\n * resource.remove().done(function(){\n *   // the resource was successfully removed\n * });\n */\nResource.prototype.remove = function(removeChildren, callback){\n\treturn this.deferred(function(){\n\t\t\treturn Resource.remove(this, callback);\n\t\t});\n}\n\nResource.prototype.update = function(callback){\n\treturn this.deferred(function(){\n\t\t\treturn EThing.get(this, callback);\n\t\t});\n}\n\n/**\n * Update this resource attributes\n * @this {EThing.Resource}\n * @param {} properties\n * @param {function(data,XHR,options)} [callback] it is executed once the request is complete whether in failure or success\n * @returns {EThing.Resource} The instance on which this method was called.\n * @example\n * resource.set({\n *   name: \"newName.txt\"\n * }).done(function(){\n *   console.log(\"the resource was successfully renamed to :\"+this.name());\n * });\n */\nResource.prototype.set = function(properties, callback){\n\tvar args = [].slice.call(arguments);\n\treturn this.deferred(function(){\n\t\t\targs.unshift(this);\n\t\t\treturn Resource.set.apply(EThing, args);\n\t\t});\n}\n/**\n * Attaches persistant data to this resource\n * @this {EThing.Resource}\n * @param {object} data\n * @param {function(data,XHR,options)} [callback] it is executed once the request is complete whether in failure or success\n * @returns {EThing.Resource} The instance on which this method was called.\n * @example\n * resource.setData({\n *   \"key\": \"value\"\n * }).done(function(){\n *   // success\n * });\n * \n * // you can also write :\n * resource.setData(\"key\", \"value\").done(function(){\n *   // success\n * });\n */\nResource.prototype.setData = function(data, callback){\n\t\n\tif(typeof data === 'string' && typeof callback != 'function'){\n\t\tvar key = data, value = callback, callback = arguments[2];\n\t\tdata = {};\n\t\tdata[key] = value;\n\t}\n\t\n\treturn this.set({'data':data},callback);\n}\n\n\n\n\n\n\n\n\n/*\nResource,callback\n*/\nResource.remove = function(a,removeChildren,callback)\n{\n\tvar context;\n\tif(a instanceof Resource){\n\t\tcontext = a;\n\t\ta = a.id();\n\t}\n\telse if(!utils.isId(a)) {\n\t\tthrow \"First argument must be a Resource object or a Resource id : \"+a;\n\t\treturn;\n\t}\n\t\n\tif(arguments.length==2 && typeof removeChildren === 'function'){\n\t\tcallback = removeChildren;\n\t\tremoveChildren = false;\n\t}\n\t\n\treturn EThing.request({\n\t\t'url': '/resources/' + a + '?' + utils.param({'children':removeChildren}),\n\t\t'method': 'DELETE',\n\t\t'context': context\n\t},callback).done(function(){\n\t\tEThing.trigger('ething.resource.removed',[a]);\n\t});\n};\n\n\n\n/*\nResource,data,callback\n*/\nResource.set = function(a,b,c){\n\tvar context;\n\t\n\tif(!utils.isPlainObject(b) || !b){\n\t\tthrow 'Second argument must be a unempty object !';\n\t\treturn;\n\t}\n\t\n\tif(a instanceof Resource){\n\t\tcontext = a;\n\t\ta = a.id();\n\t}\n\telse if(!utils.isId(a)) {\n\t\tthrow \"First argument must be a Resource object or a Resource id : \"+a;\n\t\treturn;\n\t}\n\t\n\tvar callback = c;\n\t\n\treturn EThing.request({\n\t\t'url': '/resources/' + a,\n\t\t'dataType': 'json',\n\t\t'method': 'POST',\n\t\t'contentType': \"application/json; charset=utf-8\",\n\t\t'data': b,\n\t\t'context': context,\n\t\t'headers': {\n\t\t\t\"X-HTTP-Method-Override\": \"PATCH\"\n\t\t},\n\t\t'converter': EThing.resourceConverter\n\t},callback);\n};\n\n\n\n\n\n\n\n/*\n* TOOLS\n*/\nResource.dirname = function(f) {\n\tvar s = f.replace(/\\/[^\\/]*\\/?$/, '');\n\treturn ( s === f ) ? \"\" : s;\n}\nResource.basename = function(f) {\n\treturn f.replace( /.*\\//, '' );\n}\nResource.extension = function(f){\n\treturn f.indexOf('.')>=0 ? f.split('.').pop() : '';\n}\nResource.fnmatch = function fnmatch(pattern, path) {\n\t\n\tvar patternTab = pattern.split(' ');\n\tvar parsedPattern, regexp;\n\t\n\tfor(var i=0; i<patternTab.length; i++){\n\t\tif(patternTab[i] == '') continue;\n\t\t\n\t\tparsedPattern = '^' + patternTab[i].replace(/\\//g, '\\\\/').\n\t\treplace(/\\*\\*/g, '(\\\\/[^\\\\/]+)*').\n\t\treplace(/\\*/g, '[^\\\\/]+').\n\t\treplace(/((?!\\\\))\\?/g, '$1.') + '$';\n\t\t\n\t\tparsedPattern = '^' + parsedPattern + '$';\n\t\t\n\t\tregexp = new RegExp(parsedPattern);\n\t\tif( path.match(regexp) != null ) return true;\n\t}\n\treturn false;\n};\n\n\nEThing.Resource = Resource;\n\nmodule.exports = Resource;\n","\n\nfunction foreach(arr, handler) {\n\tif (Array.isArray(arr)) {\n\t\tfor (var i = 0; i < arr.length; i++) {\n\t\t\thandler(arr[i]);\n\t\t}\n\t}\n\telse\n\t\thandler(arr);\n}\n\nfunction D(fn) {\n\tvar status = 'pending',\n\t\tdoneFuncs = [],\n\t\tfailFuncs = [],\n\t\tprogressFuncs = [],\n\t\tresultArgs = null,\n\n\ttuples = [\n\t\t\t// action, add listener,\n\t\t\t[ \"resolve\", \"done\"],\n\t\t\t[ \"reject\", \"fail\"],\n\t\t\t[ \"notify\", \"progress\"]\n\t\t],\n\t\t\n\tpromise = {\n\t\tdone: function() {\n\t\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\t\t// skip any undefined or null arguments\n\t\t\t\tif (!arguments[i]) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (Array.isArray(arguments[i])) {\n\t\t\t\t\tvar arr = arguments[i];\n\t\t\t\t\tfor (var j = 0; j < arr.length; j++) {\n\t\t\t\t\t\t// immediately call the function if the deferred has been resolved\n\t\t\t\t\t\tif (status === 'resolved') {\n\t\t\t\t\t\t\tarr[j].apply(this, resultArgs);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tdoneFuncs.push(arr[j]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// immediately call the function if the deferred has been resolved\n\t\t\t\t\tif (status === 'resolved') {\n\t\t\t\t\t\targuments[i].apply(this, resultArgs);\n\t\t\t\t\t}\n\n\t\t\t\t\tdoneFuncs.push(arguments[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\treturn this;\n\t\t},\n\n\t\tfail: function() {\n\t\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\t\t// skip any undefined or null arguments\n\t\t\t\tif (!arguments[i]) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (Array.isArray(arguments[i])) {\n\t\t\t\t\tvar arr = arguments[i];\n\t\t\t\t\tfor (var j = 0; j < arr.length; j++) {\n\t\t\t\t\t\t// immediately call the function if the deferred has been resolved\n\t\t\t\t\t\tif (status === 'rejected') {\n\t\t\t\t\t\t\tarr[j].apply(this, resultArgs);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfailFuncs.push(arr[j]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// immediately call the function if the deferred has been resolved\n\t\t\t\t\tif (status === 'rejected') {\n\t\t\t\t\t\targuments[i].apply(this, resultArgs);\n\t\t\t\t\t}\n\n\t\t\t\t\tfailFuncs.push(arguments[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\treturn this;\n\t\t},\n\n\t\talways: function() {\n\t\t\treturn this.done.apply(this, arguments).fail.apply(this, arguments);\n\t\t},\n\n\t\tprogress: function() {\n\t\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\t\t// skip any undefined or null arguments\n\t\t\t\tif (!arguments[i]) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (Array.isArray(arguments[i])) {\n\t\t\t\t\tvar arr = arguments[i];\n\t\t\t\t\tfor (var j = 0; j < arr.length; j++) {\n\t\t\t\t\t\t// immediately call the function if the deferred has been resolved\n\t\t\t\t\t\tif (status === 'pending') {\n\t\t\t\t\t\t\tprogressFuncs.push(arr[j]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// immediately call the function if the deferred has been resolved\n\t\t\t\t\tif (status === 'pending') {\n\t\t\t\t\t\tprogressFuncs.push(arguments[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\treturn this;\n\t\t},\n\n\t\t/*then: function() {\n\t\t\t// fail callbacks\n\t\t\tif (arguments.length > 1 && arguments[1]) {\n\t\t\t\tthis.fail(arguments[1]);\n\t\t\t}\n\n\t\t\t// done callbacks\n\t\t\tif (arguments.length > 0 && arguments[0]) {\n\t\t\t\tthis.done(arguments[0]);\n\t\t\t}\n\n\t\t\t// notify callbacks\n\t\t\tif (arguments.length > 2 && arguments[2]) {\n\t\t\t\tthis.progress(arguments[2]);\n\t\t\t}\n\t\t\t\n\t\t\treturn this;\n\t\t},*/\n\t\t\n\t\tthen: function( /* fnDone, fnFail, fnProgress */ ) {\n\t\t\tvar fns = arguments;\n\t\t\treturn D( function( newDefer ) {\n\t\t\t\t\n\t\t\t\ttuples.forEach(function( tuple, i ) {\n\t\t\t\t\tvar fn = (typeof fns[ i ] == 'function' ) && fns[ i ];\n\n\t\t\t\t\t// deferred[ done | fail | progress ] for forwarding actions to newDefer\n\t\t\t\t\tdeferred[ tuple[ 1 ] ]( function() {\n\t\t\t\t\t\tvar returned = fn && fn.apply( this, arguments );\n\t\t\t\t\t\tif ( returned && (typeof returned.promise == 'function' ) ) {\n\t\t\t\t\t\t\treturned.promise()\n\t\t\t\t\t\t\t\t.progress( newDefer.notify )\n\t\t\t\t\t\t\t\t.done( newDefer.resolve )\n\t\t\t\t\t\t\t\t.fail( newDefer.reject );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tnewDefer[ tuple[ 0 ] + \"With\" ](\n\t\t\t\t\t\t\t\tthis === promise ? newDefer.promise() : this,\n\t\t\t\t\t\t\t\tfn ? [ returned ] : arguments\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t} );\n\t\t\t\tfns = null;\n\t\t\t} ).promise();\n\t\t},\n\n\t\tpromise: function(obj) {\n\t\t\tif (obj == null) {\n\t\t\t\treturn promise;\n\t\t\t} else {\n\t\t\t\tfor (var i in promise) {\n\t\t\t\t\tobj[i] = promise[i];\n\t\t\t\t}\n\t\t\t\treturn obj;\n\t\t\t}\n\t\t},\n\n\t\tstate: function() {\n\t\t\treturn status;\n\t\t},\n\n\t\tdebug: function() {\n\t\t\tconsole.log('[debug]', doneFuncs, failFuncs, status);\n\t\t},\n\n\t\tisRejected: function() {\n\t\t\treturn status === 'rejected';\n\t\t},\n\n\t\tisResolved: function() {\n\t\t\treturn status === 'resolved';\n\t\t}\n\t},\n\n\tdeferred = {\n\t\tresolveWith: function(context) {\n\t\t\tif (status === 'pending') {\n\t\t\t\tstatus = 'resolved';\n\t\t\t\tvar args = resultArgs = (arguments.length > 1) ? arguments[1] : [];\n\t\t\t\tfor (var i = 0; i < doneFuncs.length; i++) {\n\t\t\t\t\tdoneFuncs[i].apply(context, args);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\n\t\trejectWith: function(context) {\n\t\t\tif (status === 'pending') {\n\t\t\t\tstatus = 'rejected';\n\t\t\t\tvar args = resultArgs = (arguments.length > 1) ? arguments[1] : [];\n\t\t\t\tfor (var i = 0; i < failFuncs.length; i++) {\n\t\t\t\t\tfailFuncs[i].apply(context, args);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\n\t\tnotifyWith: function(context) {\n\t\t\tif (status === 'pending') {\n\t\t\t\tvar args = resultArgs = (arguments.length > 1) ? arguments[1] : [];\n\t\t\t\tfor (var i = 0; i < progressFuncs.length; i++) {\n\t\t\t\t\tprogressFuncs[i].apply(context, args);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\n\t\tresolve: function() {\n\t\t\treturn this.resolveWith(this, arguments);\n\t\t},\n\n\t\treject: function() {\n\t\t\treturn this.rejectWith(this, arguments);\n\t\t},\n\n\t\tnotify: function() {\n\t\t\treturn this.notifyWith(this, arguments);\n\t\t}\n\t}\n\n\tvar obj = promise.promise(deferred);\n\n\tif (fn) {\n\t\tfn.apply(obj, [obj]);\n\t}\n\n\treturn obj;\n}\n\nD.when = function() {\n\tif (arguments.length < 2) {\n\t\tvar obj = arguments.length ? arguments[0] : undefined;\n\t\tif (obj && (typeof obj.isResolved === 'function' && typeof obj.isRejected === 'function')) {\n\t\t\treturn obj.promise();\t\t\t\n\t\t}\n\t\telse {\n\t\t\treturn D().resolve(obj).promise();\n\t\t}\n\t}\n\telse {\n\t\treturn (function(args){\n\t\t\tvar df = D(),\n\t\t\t\tsize = args.length,\n\t\t\t\tdone = 0,\n\t\t\t\trp = new Array(size);\t// resolve params: params of each resolve, we need to track down them to be able to pass them in the correct order if the master needs to be resolved\n\n\t\t\tfor (var i = 0; i < args.length; i++) {\n\t\t\t\t(function(j) {\n\t\t\t\t\tvar obj = null;\n\t\t\t\t\t\n\t\t\t\t\tif (args[j].done) {\n\t\t\t\t\t\targs[j].done(function() { rp[j] = (arguments.length < 2) ? arguments[0] : arguments; if (++done == size) { df.resolve.apply(df, rp); }})\n\t\t\t\t\t\t.fail(function() { df.reject(arguments); });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tobj = args[j];\n\t\t\t\t\t\targs[j] = new Deferred();\n\t\t\t\t\t\t\n\t\t\t\t\t\targs[j].done(function() { rp[j] = (arguments.length < 2) ? arguments[0] : arguments; if (++done == size) { df.resolve.apply(df, rp); }})\n\t\t\t\t\t\t.fail(function() { df.reject(arguments); }).resolve(obj);\n\t\t\t\t\t}\n\t\t\t\t})(i);\n\t\t\t}\n\n\t\t\treturn df.promise();\n\t\t})(arguments);\n\t}\n}\n\nmodule.exports = D;\n\n","var EThing = require(\"./core.js\");\nvar utils = require(\"./utils.js\");\nvar Resource = require(\"./resource.js\");\n\n\n\n\n/**\n * Constructs a Device instance from an object decribing a device. Should not be called directly. Use instead {@link EThing.list}.\n * @protected\n * @class The Device resource handle a device\n * @memberof EThing\n * @extends EThing.Resource\n * @param {object} json\n */\nvar Device = function(json)\n{\n\tResource.call(this, json);\n\t\n\t(this._json.methods || []).forEach(function(operationId){\n\t\tif(typeof this[operationId] == 'undefined'){\n\t\t\tvar self = this;\n\t\t\t\n\t\t\tthis[operationId] = function(data, binary, callback){\n\t\t\t\tvar args = [].slice.call(arguments);\n\t\t\t\treturn this.deferred(function(){\n\t\t\t\t\targs.unshift(operationId);\n\t\t\t\t\targs.unshift(this);\n\t\t\t\t\treturn Device.execute.apply(EThing, args);\n\t\t\t\t});\n\t\t\t};\n\t\t\t\n\t\t\tthis[operationId].getApi = function(callback){\n\t\t\t\treturn Device.getApi(self, operationId, callback);\n\t\t\t};\n\t\t\t\n\t\t\tthis[operationId].executeUrl = function(data){\n\t\t\t\treturn self.executeUrl(operationId, data);\n\t\t\t};\n\t\t}\n\t}, this);\n}\nutils.inherits(Device, Resource);\n\n\n/**\n * \n * @this {EThing.Device}\n * @returns {string|null} Return either a string containing information about the location (coordinates, place, room ...) or null if no location is defined for this device.\n */\nDevice.prototype.location = function() {\n  return this._json.location || null;\n}\n\n/**\n * \n * @this {EThing.Device}\n * @returns {boolean} Return true if the device is connected.\n */\nDevice.prototype.connected = function() {\n\treturn !!this._json.connected;\n}\n\n/**\n * \n * @this {EThing.Device}\n * @returns {Date|null}\n */\nDevice.prototype.lastSeenDate = function() {\n  return (typeof this._json.lastSeenDate == 'string') ? new Date(this._json.lastSeenDate) : null;\n}\n\n/**\n * \n * @this {EThing.Device}\n * @returns {boolean}\n */\nDevice.prototype.hasBattery = function() {\n  return (typeof this._json.battery == \"number\") && this._json.battery >= 0 ;\n}\n\n/**\n * \n * @this {EThing.Device}\n * @returns {number}\n */\nDevice.prototype.battery = function() {\n  return this.hasBattery() ? this._json.battery : null ;\n}\n\n/**\n * List the available methods on this device.\n * @this {EThing.Device}\n * @returns {string[]}\n */\nDevice.prototype.methods = function(){\n\treturn this._json.methods || [];\n}\n\n/**\n * List the available interfaces on this device.\n * @this {EThing.Device}\n * @returns {string[]}\n */\nDevice.prototype.interfaces = function(){\n\treturn this._json.interfaces || [];\n}\n\n\n/**\n * Execute an operation on this device.\n * @this {EThing.Device}\n * @param {string} operationId\n * @param {object|array|anything} [data] the optional arguments required by the operation\n * @param {boolean} [binary] if true, return the content as binary data (as Blob in a browser, or Buffer in NodeJs). The arguments must be provided.\n * @param {function(data,XHR,options)} [callback] it is executed once the request is complete whether in failure or success\n * @returns {EThing.Device} The instance on which this method was called.\n * @example\n * // if this device is a thermometer :\n * device.execute('getTemperature').done(function(data){\n *   // success, handle the data here\n * });\n *\n * // if this device is a switch :\n * device.execute('setState', {\n * \t state: true\n * });\n *\n * // you can also pass the arguments as an array :\n * device.execute('setState', [true]);\n * \n * // or as is :\n * device.execute('setState', true);\n * \n * \n * // you may also do :\n * device.getTemperature().done(function(data){\n *   // success, handle the data here\n * });\n *\n */\nDevice.prototype.execute = function(){\n\tvar args = [].slice.call(arguments);\n\treturn this.deferred(function(){\n\t\t\targs.unshift(this);\n\t\t\treturn Device.execute.apply(EThing, args);\n\t\t});\n}\n\n/**\n * Returns an url for executing an operation.\n * @this {EThing.Device}\n * @param {string} operationId\n * @param {object} [data] the optional data required by the operation\n * @returns {string} The url.\n * @example\n * \n * var image = new Image();\n * image.src = device.executeUrl('getImage');\n * document.body.appendChild(image);\n *\n */\nDevice.prototype.executeUrl = function(operationId, data){\n\tvar url = 'devices/'+this.id()+'/call/'+operationId;\n\t\n\tif(isPlainObject(data) && Object.keys(data).length !== 0){\n\t\turl += '?' + utils.param(data);\n\t}\n\t\n\treturn EThing.toApiUrl(url,true);\n}\n\n/**\n * Retrieve information about a specific method or all the methods available for this device.\n * @this {EThing.Device}\n * @param {string} [operationId] if set, only information about this operation will be returned\n * @param {function(data,XHR,options)} [callback] it is executed once the request is complete whether in failure or success\n * @returns {EThing.Device} The instance on which this method was called.\n *\n */\nDevice.prototype.getApi = function(operationId, callback){\n\tvar args = [].slice.call(arguments);\n\treturn this.deferred(function(){\n\t\targs.unshift(this);\n\t\treturn Device.getApi.apply(EThing, args);\n\t});\n}\n\n\n\n\n\n/*\ndevice, operationId[, data ]\n*/\nDevice.execute = function(device, operationId, data, binary, callback){\n\t\n\tvar context;\n\t\n\tif(device instanceof Device){\n\t\tcontext = device;\n\t\tdevice = device.id();\n\t}\n\telse if(utils.isId(device))\n\t\tdevice = device;\n\telse {\n\t\tthrow \"First argument must be a Device object or a Device id !\";\n\t\treturn;\n\t}\n\t\n\tif(arguments.length == 4){\n\t\t\n\t\tif(typeof binary == 'function'){\n\t\t\tcallback = binary;\n\t\t\tbinary = undefined;\n\t\t}\n\t\t\n\t} else if(arguments.length == 3){\n\t\t\n\t\tif(typeof data == 'function'){\n\t\t\tcallback = data;\n\t\t\tdata = undefined;\n\t\t}\n\t\t\n\t}\n\t\n\treturn EThing.request({\n\t\t'url': '/devices/' + device + '/call/' + operationId,\n\t\t'method': 'POST',\n\t\t'contentType': \"application/json; charset=utf-8\",\n\t\t'data': typeof data != 'undefined' && data!==null ? JSON.stringify(data) : undefined,\n\t\t'dataType': binary ? (utils.isNode ? 'buffer' : 'blob') : 'auto',\n\t\t'context': context\n\t},callback);\n\t\n};\n\n\n/*\ndevice[, operationId]\n*/\nDevice.getApi = function(device, operationId, callback){\n\t\n\tvar context;\n\t\n\tif(typeof operationId == 'function' && typeof callback == 'undefined'){\n\t\tcallback = operationId;\n\t\toperationId = undefined;\n\t}\n\t\n\tif(device instanceof Device){\n\t\tcontext = device;\n\t\tdevice = device.id();\n\t}\n\telse if(utils.isId(device))\n\t\tdevice = device;\n\telse {\n\t\tthrow \"First argument must be a Device object or a Device id !\";\n\t\treturn;\n\t}\n\t\n\treturn EThing.request({\n\t\t'url': '/devices/' + device + '/api' + (operationId?('/'+operationId):''),\n\t\t'method': 'GET',\n\t\t'context': context,\n\t\t'dataType': 'json'\n\t},callback);\n\t\n};\n\n\n/**\n * Creates a new device\n *\n * @method EThing.Device.create\n * @param {string} type the type of the device to create (ie: SSH, MQTT ...)\n * @param {object} attributes\n * @param {function(data,XHR,options)} [callback] it is executed once the request is complete whether in failure or success\n * @returns {Deferred} a {@link http://api.jquery.com/category/deferred-object/|jQuery like Promise object}. {@link EThing.request|More ...} \n * @fires EThing#ething.device.created\n * @example\n * EThing.Device.create('SSH', {\n *   host: \"localhost\",\n *   auth: {\n *     user: \"foo\",\n *     password: \"bar\"\n *   }\n * }).done(function(resource){\n *     console.log('the new SSH device has been created');\n * })\n */\nDevice.create = function(type, a,callback){\n\t\n\ta.type = type;\n\t\n\treturn EThing.request({\n\t\t'url': '/devices',\n\t\t'dataType': 'json',\n\t\t'method': 'POST',\n\t\t'contentType': \"application/json; charset=utf-8\",\n\t\t'data': a,\n\t\t'converter': EThing.resourceConverter\n\t},callback).done(function(r){\n\t\tEThing.trigger('ething.device.created',[r]);\n\t});\n\t\n};\n\nEThing.Device = Device;\n\nmodule.exports = Device;\n\n","\nvar Deferred = require(\"./deferred.js\");\n\n\t\n// deferred engine\nvar DeferredObject = function(){\n\t\n\tvar resolvedDfr = Deferred().resolve(),\n\t\tqueue = [],\n\t\tself = this;\n\t\n\t\n\t['done','fail','always','progress','then','state','isRejected','isResolved'].forEach(function(fctname){\n\t\tthis[fctname] = function(){\n\t\t\t// get last deferred object in queue\n\t\t\tvar dfr = queue.length ? queue[queue.length-1].dfr : resolvedDfr;\n\t\t\t\n\t\t\tvar r = dfr[fctname].apply(self,Array.prototype.slice.call(arguments));\n\t\t\t\n\t\t\tif(typeof r == 'object' && fctname!=='then'){\n\t\t\t\t// dfr object\n\t\t\t\treturn self;\n\t\t\t} else {\n\t\t\t\treturn r; // state , isRejected, isResolved, then\n\t\t\t}\n\t\t}\n\t}, this);\n\tthis.promise = function(){\n\t\treturn self;\n\t}\n\t\n\tfunction processQueue(){\n\t\t\n\t\tfor(var i=0; i<queue.length; i++){\n\t\t\t\n\t\t\tvar dfr = queue[i].dfr,\n\t\t\t\tpending = queue[i].pending,\n\t\t\t\tfn = queue[i].fn;\n\t\t\t\n\t\t\tif(pending){\n\t\t\t\t\n\t\t\t\tqueue[i].pending = false;\n\t\t\t\t\n\t\t\t\tfn.call(self,self)\n\t\t\t\t\t.done(function(){\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar args = Array.prototype.slice.call(arguments);\n\t\t\t\t\t\t\n\t\t\t\t\t\tdfr.resolveWith(self,args);\n\t\t\t\t\t})\n\t\t\t\t\t.fail(function(){\n\t\t\t\t\t\tdfr.rejectWith(self,Array.prototype.slice.call(arguments));\n\t\t\t\t\t})\n\t\t\t\t\t.progress(function(){\n\t\t\t\t\t\tdfr.notifyWith(self,Array.prototype.slice.call(arguments));\n\t\t\t\t\t});\n\t\t\t\t\n\t\t\t}\n\t\t\telse {\n\t\t\t\t\n\t\t\t\tif(dfr.isResolved() || dfr.isRejected()){\n\t\t\t\t\tqueue.splice(i, 1); // remove finished actions\n\t\t\t\t\ti--;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t// else busy, wait for that element to finish\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tbreak;\n\t\t\t\n\t\t}\n\t}\n\t\n\tthis.deferred = function(action){\n\t\t\n\t\t// bind a new deferred object to this new action\n\t\tvar dfr = new Deferred();\n\t\t\n\t\t\n\t\tdfr.always(function(){\n\t\t\t// execute the next action\n\t\t\tprocessQueue();\n\t\t});\n\t\t\n\t\t\n\t\t// add this action to the queue \n\t\tqueue.push({\n\t\t\tfn: action,\n\t\t\tdfr: dfr,\n\t\t\tpending: true\n\t\t});\n\t\t\n\t\tprocessQueue();\n\t\t\n\t\treturn this; // chainable\n\t\t\n\t};\n\t\n}\n\nmodule.exports = DeferredObject;\n","\nvar Event = require(\"./event.js\");\n\nfunction EventEngine(obj){\n\t\n\tvar event_map = {};\n\t\n\tobj.on = function(events, handler) {\n\t\tif(typeof handler == 'function'){\n\t\t\tevents = events.split(' ');\n\t\t\tfor(var i=0; i<events.length; i++){\n\t\t\t\tvar event = events[i];\n\t\t\t\tif(event.length){\n\t\t\t\t\tif(!event_map[event]) event_map[event] = [];\n\t\t\t\t\tevent_map[event].push(handler);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tobj.off = function(events, handler) {\n\t\tevents = events.split(' ');\n\t\tfor(var i=0; i<events.length; i++){\n\t\t\tvar event = events[i];\n\t\t\tif(event.length && event_map[event]){\n\t\t\t\tif(typeof handler == 'function'){\n\t\t\t\t\tfor(var j=0; j<event_map[event].length; j++){\n\t\t\t\t\t\tif(event_map[event][j]===handler){\n\t\t\t\t\t\t\tevent_map[event].splice(j, 1);\n\t\t\t\t\t\t\tj--;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tevent_map[event] = [];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tobj.one = function(events, handler) {\n\t\tif(typeof handler == 'function'){\n\t\t\tobj.on(events, function(){\n\t\t\t\tobj.off(events,handler);\n\t\t\t\thandler.apply(this,Array.prototype.slice.call(arguments));\n\t\t\t});\n\t\t}\n\t}\n\t\n\tobj.trigger = function(event, extraParameters){\n\t\tif(typeof event === 'string')\n\t\t\tevent = Event(event);\n\t\t\n\t\tvar type = event.type,\n\t\t\th = event_map[type] || [];\n\t\t\n\t\tfor(var i=0; i<h.length; i++){\n\t\t\tvar args = [event];\n\t\t\tif(Array.isArray(extraParameters))\n\t\t\t\targs = args.concat(extraParameters);\n\t\t\th[i].apply(obj,args);\n\t\t\t\n\t\t\tif(event.isImmediatePropagationStopped() || event.isPropagationStopped())\n\t\t\t\tbreak;\n\t\t}\n\t\treturn event;\n\t}\n\t\n\t\n}\n\nmodule.exports = EventEngine;","var utils = require(\"./utils.js\");\n\n\nfunction returnTrue() {\n\treturn true;\n}\n\nfunction returnFalse() {\n\treturn false;\n}\n\n\n/*\nEvent object\n*/\n\nvar Event = function( src, props ) {\n\n\t// Allow instantiation without the 'new' keyword\n\tif ( !( this instanceof Event ) ) {\n\t\treturn new Event( src, props );\n\t}\n\n\t// Event type\n\tthis.type = src;\n\n\t// Put explicitly provided properties onto the event object\n\tif ( props ) {\n\t\tutils.extend( this, props );\n\t}\n\n\t// Create a timestamp if incoming event doesn't have one\n\tthis.timeStamp = Date.now();\n\t\n};\n\nEvent.prototype = {\n\tconstructor: Event,\n\tisDefaultPrevented: returnFalse,\n\tisPropagationStopped: returnFalse,\n\tisImmediatePropagationStopped: returnFalse,\n\n\tpreventDefault: function() {\n\t\tthis.isDefaultPrevented = returnTrue;\n\t},\n\tstopPropagation: function() {\n\t\tthis.isPropagationStopped = returnTrue;\n\t},\n\tstopImmediatePropagation: function() {\n\t\tthis.isImmediatePropagationStopped = returnTrue;\n\t\tthis.stopPropagation();\n\t}\n};\n\n\n\n\t\nmodule.exports = Event;\n\n","\n/**\n * This library helps to organise your resources in a tree structure.\n * Folders do not exist explicitly in eThing. But this library emulate it.\n * Every resource must have a name set. A name is composed of a pathname followed by a filename.\n * The pathname represent the folder where the file is located.\n *\n * For instance, the following resources :\n *    - dir1/file1.txt\n *    - dir1/file2.txt\n *    - dir2/file3.txt\n *    - file4.txt\n *\n * could be reorganized into folders:\n *\n *     root\n *      |\n *      +--dir1\n *      |    +---file1.txt\n *      |    +---file2.txt\n *      |\n *      +--dir2\n *      |    +---file3.txt\n *      |\n *      +--file4.txt\n *\n * This way, it is convenient to find all the resources located in the same folder.\n *\n * @example\n * // list all the txt files in the dir1 folder\n * EThing.arbo.load(function(){\n *   // the next line may list Table that ends with \".txt\"\n *   console.log(EThing.arbo.findOne('dir1').children(/\\.txt/i));\n *   // better\n *   console.log(EThing.arbo.findOne('dir1').children(function(r){\n *     return (r instanceof EThing.File) && /\\.txt/i.test(r.name());\n *   }));\n * })\n *\n * @namespace {object} EThing.arbo\n */\n \n\nvar EThing = require(\"./core.js\");\nvar utils = require(\"./utils.js\");\nvar Resource = require(\"./resource.js\");\nvar Deferred = require(\"./deferred.js\");\n\n\n\nvar resources = [],\n\tloaddfr = null,\n\troot = null;\n\n\n\n\n\n\n/**\n * This class is used in the {@link EThing.arbo} library. It emulates a tree structure using folders.\n * \n * @protected\n * @class\n * @memberof EThing\n * @extends EThing.Resource\n * @param {Object} json\n */\n// internal folder type\nvar Folder = function(json) {\n\t\n\tif(!json.id)\n\t\tjson.id = '/'+json.name; // just to avoid collision beetween native resource's id and Folder's id (ie: native resource's id never has '/' character)\n\t\n\tif(json.name==='')\n\t\tthis.isRoot = true;\n\t\n\tResource.call(this,utils.extend({\n\t\ttype:'Folder'\n\t},json));\n\t\n};\nutils.inherits(Folder,Resource);\n\n/*\n* Overriding some base methods \n*/\n\n// find the oldest createdDate\nFolder.prototype.createdDate = function() {\n\tvar l = this.find(),\n\t\tt = null;\n\tfor(var i=0; i<l.length; i++){\n\t\tif (t===null || t > l[i].createdDate())\n\t\t\tt = l[i].createdDate();\n\t}\n\treturn t;\n}\n\n// Find the newest modifiedDate\nFolder.prototype.modifiedDate = function() {\n\tvar l = this.find(),\n\t\tt = null;\n\tfor(var i=0; i<l.length; i++){\n\t\tif (t===null || t < l[i].modifiedDate())\n\t\t\tt = l[i].modifiedDate();\n\t}\n\treturn t;\n}\n\n\n/**\n * Remove all the resources under this folder.\n *\n * @this {EThing.Folder}\n * @param {function(EThing.Folder)} [callback] function executed once the folder is removed\n * @returns {EThing.Folder} The instance on which this method was called.\n */\nFolder.prototype.remove = function(callback) {\n\tvar self = this;\n\treturn this.deferred(function(){\n\t\t\tvar deferreds = [];\n\t\t\tthis.children().forEach(function(r){\n\t\t\t\tdeferreds.push( r.remove() );\n\t\t\t});\n\t\t\treturn Deferred.when.apply(Deferred, deferreds).done(function(){\n\t\t\t\tif(typeof callback == 'function')\n\t\t\t\t\tcallback.call(self);\n\t\t\t});\n\t\t});\n}\n\n/**\n * This method is not applicable on folder\n * @private\n */\nFolder.prototype.set = null;\n/**\n * This method is not applicable on folder\n * @private\n */\nFolder.prototype.setData = null;\n/**\n * This method is not applicable on folder\n * @private\n */\nFolder.prototype.description;\n/**\n * This method is not applicable on folder\n * @private\n */\nFolder.prototype.data;\n/**\n * This method is not applicable on folder\n * @private\n */\nFolder.prototype.createdBy;\n/**\n * This method is not applicable on folder\n * @private\n */\nFolder.prototype.extension = function(){\n\treturn '';\n};\n\n\n/**\n * List the resources and folders immediately located in this folder. This method only travels a single level down the tree.\n * See the method {@link EThing.Folder#find} to traverse down multiple levels to select descendant elements (grandchildren, etc.).\n *\n * A filter can be provided, his type must be one of the following :\n *   - function : function to test each resource. Invoked with arguments (EThing.Resource, relativeName). Return true to keep the resource, false otherwise.\n *   - string : only the resources that match the given relative name are returned (note: two resource can have the same name).\n *   - string[] : only the resources that match the given relative names are returned.\n *   - RegExp : only the resources satisfying this regular expression is returned.\n *  \n * @param {function(EThing.Resource,relativeName)|string|string[]|RegExp} [filter] if set, only the resources that match the filter are returned.\n * @this {EThing.Folder}\n * @returns {EThing.Resource[]}\n */\nFolder.prototype.children = function(filter_, type){\n\tvar fd = this._json.name.length ? (this._json.name+'/') : ''; // the root node has an empty name, no leading '/'\n\tvar list = find(new RegExp('^'+fd+'[^/]+$'));\n\tif(typeof filter_ != \"undefined\" && filter_)\n\t\tlist = list.filter(function(r){\n\t\t\tif(!type || r.type() === type){\n\t\t\t\tvar relativeName = r.name().substr(fd.length);\n\t\t\t\t\n\t\t\t\tif(typeof filter_ == 'function'){\n\t\t\t\t\treturn !!filter_.call(r,r,relativeName);\n\t\t\t\t}\n\t\t\t\telse if(typeof filter_ == 'string'){\n\t\t\t\t\treturn relativeName === filter_;\n\t\t\t\t}\n\t\t\t\telse if(Array.isArray(filter_)){\n\t\t\t\t\treturn filter_.indexOf(relativeName) >= 0;\n\t\t\t\t}\n\t\t\t\telse if(filter_ instanceof RegExp){\n\t\t\t\t\treturn filter_.test(relativeName);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\treturn list;\n}\n\n/**\n * Synonym of {@link EThing.Folder#children}\n * @this {EThing.Folder}\n * @returns {EThing.Resource[]}\n */\nFolder.prototype.ls = Folder.prototype.children;\n\n/**\n * List the resources and folders under this folder.\n * The find() and {@link EThing.Folder#children} methods are similar, except that the latter only travels a single level down the tree.\n *\n * A filter can be provided, his type must be one of the following :\n *   - function : function to test each resource. Invoked with arguments (EThing.Resource, relativeName). Return true to keep the resource, false otherwise.\n *   - string : only the resources that match the given relative name are returned (note: two resource can have the same name).\n *   - string[] : only the resources that match the given relative names are returned.\n *   - RegExp : only the resources satisfying this regular expression is returned.\n *  \n * @param {function(EThing.Resource,relativeName)|string|string[]|RegExp} [filter] if set, only the resources that match the filter are returned.\n * @this {EThing.Folder}\n * @returns {EThing.Resource[]}\n */\nFolder.prototype.find = function(filter_, type){ // deep find\n\tvar fd = this._json.name.length ? (this._json.name+'/') : ''; // the root node has an empty name, no leading '/'\n\tvar list = find(fd.length ? new RegExp('^'+fd) : new RegExp('^.+'));\n\tif(typeof filter_ != \"undefined\" && filter_)\n\t\tlist = list.filter(function(r){\n\t\t\tif(!type || r.type() === type){\n\t\t\t\tvar relativeName = r.name().substr(fd.length);\n\t\t\t\t\n\t\t\t\tif(typeof filter_ == 'function'){\n\t\t\t\t\treturn !!filter_.call(r,r,relativeName);\n\t\t\t\t}\n\t\t\t\telse if(typeof filter_ == 'string'){\n\t\t\t\t\treturn relativeName === filter_;\n\t\t\t\t}\n\t\t\t\telse if(Array.isArray(filter_)){\n\t\t\t\t\treturn filter_.indexOf(relativeName) >= 0;\n\t\t\t\t}\n\t\t\t\telse if(filter_ instanceof RegExp){\n\t\t\t\t\treturn filter_.test(relativeName);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\treturn list;\n}\n\n/**\n * Same as {@link EThing.Folder#find} except that it will return only one result (the first resource that match the filter) or null if nothing was found.\n * See {@link EThing.Folder#find} for more details about the argument.\n *  \n * @param {function(EThing.Resource,relativeName)|string|string[]|RegExp} [filter] if set, only the first resource that match the filter is returned.\n * @this {EThing.Folder}\n * @returns {EThing.Resource|null}\n */\nFolder.prototype.findOne = function(filter_, type){\n\tvar res = this.find(filter_, type);\n\treturn res.length ? res[0] : null;\n}\n\n/**\n * Returns the number of immediate children.\n * \n * @this {EThing.Folder}\n * @returns {number}\n */\nFolder.prototype.length = function(){\n\treturn this.children().length;\n}\n\n\n// extend the EThing.Resource class\n/**\n * Returns the parent directory of this resource, Returns undefined if this resource is the root directory.\n * \n * @memberof EThing.Resource\n * @this {EThing.Resource}\n * @returns {EThing.Resource|undefined}\n */\nEThing.Resource.prototype.parent = function(){\n\tif(!this.isRoot)\n\t\treturn findOneById('/'+this.dirname());\n}\n\n\n\nEThing.Folder = Folder;\n\n\n\nfunction clear(){\n\tresources = [];\n\tloaddfr = null;\n\troot = null;\n}\n\n\n/**\n * Load all available resources.\n * @memberof EThing.arbo\n * @param {function(EThing.Resource[])} [callback] function executed once the resources are loaded\n * @param {boolean} [force] force to reload the entire resources\n * @returns {Deferred} a {@link http://api.jquery.com/category/deferred-object/|jQuery like Promise object}.\n */\nfunction load(callback, force) {\n\tvar dfr;\n\t\n\tif(loaddfr && !force){\n\t\tif(loaddfr===true)\n\t\t\tdfr = new Deferred().resolve().promise();\n\t\telse\n\t\t\tdfr = loaddfr;\n\t}\n\telse {\n\t\tvar pdfr = new Deferred();\n\t\t\n\t\tclear();\n\t\t\n\t\t// load the resources\n\t\tEThing.request({\n\t\t\t'url': '/resources',\n\t\t\t'method': 'GET',\n\t\t\t'dataType': 'json'\n\t\t}).done(function(rs) {\n\t\t\t\n\t\t\tloaddfr = true;\n\t\n\t\t\t// reset everything\n\t\t\tresources = [];\n\t\t\t\n\t\t\t// add the root node\n\t\t\troot = new EThing.Folder({\n\t\t\t\t'name': ''\n\t\t\t});\n\t\t\t\n\t\t\tresources.push(root);\n\t\t\t\n\t\t\t// add the other resources\n\t\t\trs.forEach(function(resource) {\n\t\t\t\tif(!(resource = EThing.instanciate(resource))) return;\n\t\t\t\tadd(resource);\n\t\t\t});\n\t\t\t\n\t\t\tpdfr.resolve();\n\t\t});\n\t\t\n\t\tloaddfr = dfr = pdfr.promise();\n\t}\n\t\n\treturn dfr.done(function() {\n\t\tif (typeof callback == 'function')\n\t\t\tcallback(list());\n\t\t\n\t\t// trigger\n\t\tEThing.trigger('ething.arbo.loaded');\n\t});\n};\n\nfunction refresh(callback) {\n\treturn EThing.request({\n\t\t'url': '/resources',\n\t\t'method': 'GET',\n\t\t'dataType': 'json'\n\t}).then(function(rs) {\n\t\t\n\t\trs = rs.map(function(r){\n\t\t\treturn EThing.instanciate(r);\n\t\t}).filter(function(r){\n\t\t\treturn r;\n\t\t});\n\t\t\n\t\tupdate(rs, true);\n\t\t\n\t\treturn resources;\n\t}).done(callback);\n\t\n}\n\n\n\nfunction update(newResources, replaceAll, noTrigger){\n\t\n\tif(!Array.isArray(newResources)) newResources = [newResources];\n\t\n\tvar removed = [];\n\tvar added = [];\n\tvar updated = [];\n\t\n\tif(replaceAll){\n\t\t// check for removed resources\n\t\t// search for resources that have been deleted\n\t\tresources.forEach(function(r, index){\n\t\t\t\n\t\t\tif(r instanceof EThing.Folder) return;\n\t\t\t\n\t\t\tfor(var i in newResources){\n\t\t\t\tif(newResources[i].id() === r.id()){\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tremoved.push(index);\n\t\t});\n\t\t\n\t\tremoved.map(function(i){\n\t\t\tvar r = resources[i];\n\t\t\tresources.splice(i, 1);\n\t\t\treturn r; \n\t\t});\n\t}\n\t\n\t// check for new resources or update ones\n\tnewResources.forEach(function(r, index){\n\t\t\n\t\tvar found = false;\n\t\tfor(var i in resources){\n\t\t\tif(resources[i].id() === r.id()){\n\t\t\t\tfound = i;\n\t\t\t\tbreak;;\n\t\t\t}\n\t\t}\n\t\tif(found===false){\n\t\t\t// new resource\n\t\t\tadded.push(r);\n\t\t\tadd(r);\n\t\t} else {\n\t\t\t// maybe updated ?\n\t\t\tvar o = resources[found];\n\t\t\tif(o._fromJson(r.json())){\n\t\t\t\tupdated.push(o);\n\t\t\t}\n\t\t\tnewResources[index] = o;\n\t\t}\n\t\t\n\t});\n\t\n\tif(replaceAll){\n\t\t// remove empty folder\n\t\tfor(var i=0; i<resources.length; i++){\n\t\t\tvar r = resources[i];\n\t\t\tif(r instanceof EThing.Folder){\n\t\t\t\tif(r.find(function(t){return !(t instanceof EThing.Folder);}).length==0){\n\t\t\t\t\tremoved.push(r);\n\t\t\t\t\tresources.splice(i, 1);\n\t\t\t\t\ti--;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tvar hasChanged = removed.length>0 || added.length>0 || updated.length>0;\n\t\n\tif(!noTrigger && hasChanged){\n\t\tEThing.trigger('ething.arbo.changed', [added, removed, updated]);\n\t}\n\t\n\treturn {\n\t\tresources : newResources,\n\t\tremoved : removed,\n\t\tadded : added,\n\t\tupdated: updated,\n\t\thasChanged: hasChanged\n\t};\n}\n\n\nfunction add(resource) {\n\t\n\tresources.push(resource);\n\t\n\t// check if the folder exist\n\tvar dirname = resource.dirname();\n\tvar f = false;\n\tfor(var i=0; i<resources.length; i++){\n\t\tif((resources[i] instanceof EThing.Folder) && resources[i].name() === dirname){\n\t\t\tf = true;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif(!f){\n\t\t// create the folder !\n\t\tadd(new EThing.Folder({\n\t\t\t'name': dirname\n\t\t}));\n\t}\n\t\n\treturn resource;\n}\n\n\n\nfunction remove(resource,noTraversingUp,noTrigger){\n\tif(Array.isArray(resource)){\n\t\tresource.forEach(function(r){\n\t\t\tremove(r, noTraversingUp);\n\t\t});\n\t\treturn;\n\t}\n\t\n\tif(typeof resource === 'string'){\n\t\tresource = findOneById(resource);\n\t\tif(!resource) return;\n\t}\n\t\n\tif(resource.isRoot === true) return; // do not remove the root directory !\n\t\n\tvar removed = [];\n\t\n\tif(resource instanceof EThing.Folder){\n\t\t// remove all the children first !\n\t\tresource.children().forEach(function(r){\n\t\t\tremove(r,true);\n\t\t});\n\t}\n\t\n\tfor (var i=0; i<resources.length; i++) {\n\t\tvar r = resources[i];\n\t\tif (r.id() == resource.id()) {\n\t\t\tremoved.push(r);\n\t\t\tresources.splice(i, 1);\n\t\t\tif(!noTraversingUp){\n\t\t\t\t// remove the associated folder ?\n\t\t\t\tvar folder = r.parent();\n\t\t\t\tif(folder && folder.children().length==0){\n\t\t\t\t\t// this directory has no more children, remove it !\n\t\t\t\t\tremove(folder);\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tif(!noTrigger && removed.length){\n\t\tEThing.trigger('ething.arbo.changed', [[], removed, []]);\n\t}\n}\n\n\n\n/**\n * Find a resource by its unique id. For all the resources except the Folder, the id is a 7 character alphanumeric string.\n * Since there is no duplicate name for folders, their id is equal to their name.\n *\n * @memberof EThing.arbo\n * @param {string} id 7 character alphanumeric string for all resources except for Folders which is their name.\n * @return {EThing.Resource|undefined} return undefined if not found\n */\nfunction findOneById(w) {\n\tfor(var i=0; i<resources.length; i++)\n\t\tif(resources[i].id() === w)\n\t\t\treturn resources[i];\n};\n\n\n\n\n/**\n * Returns a list of resources that pass the test implemented by the provided function or regular expression (as a string or a RegExp object).\n * The find() method creates a new array with all the resources that pass the test implemented by the provided first argument.\n *\n * The test argument's type must be one of the following :\n *   - function : function to test each resource. Invoked with arguments (EThing.Resource). Return true to keep the resource, false otherwise.\n *   - string : only the resources that match the given relative name are returned (note: two resource can have the same name).\n *   - string[] : only the resources that match the given relative names are returned.\n *   - RegExp : only the resources satisfying this regular expression is returned.\n *   - undefined : returns all the resources\n * \n * @memberof EThing.arbo\n * @param {function(EThing.Resource,relativeName)|string|string[]|RegExp} [filter] only the resources that match the filter are returned.\n * @return {EThing.Resource[]}\n */\nfunction find(filter, type){\n\treturn resources.filter(function(r){\n\t\tif(!type || r.type() === type){\n\t\t\tvar name = r.name();\n\t\t\tif(typeof filter == 'function'){\n\t\t\t\treturn !!filter.call(r,r);\n\t\t\t}\n\t\t\telse if(typeof filter == 'string'){\n\t\t\t\treturn name === filter;\n\t\t\t}\n\t\t\telse if(Array.isArray(filter)){\n\t\t\t\treturn filter.indexOf(name) >= 0;\n\t\t\t}\n\t\t\telse if(filter instanceof RegExp){\n\t\t\t\treturn filter.test(name);\n\t\t\t}\n\t\t\telse\n\t\t\t\treturn true;\n\t\t}\n\t\t\n\t});\n}\n\n/**\n * Same as {@link EThing.arbo.find} except that it will return only one result (the first resource that match the filter) or null if nothing was found.\n * See {@link EThing.arbo.find} for more details about the argument.\n *  \n * @memberof EThing.arbo\n * @param {function(EThing.Resource,relativeName)|string|string[]|RegExp} [filter] only the first resource that match the filter is returned.\n * @returns {EThing.Resource|null}\n */\nfunction findOne(filter, type){\n\tvar res = find(filter, type);\n\treturn res.length ? res[0] : null;\n}\n\n\n/**\n * return all the resources. Same as {@link EThing.arbo.find|EThing.arbo.find()}.\n * @memberof EThing.arbo\n * @return {EThing.Resource[]}\n */\nfunction list(){\n\treturn resources;\n}\n\n\n\n\n\n\n\n\nEThing.on('ething.resource.removed', function(evt, resourceId){\n\tvar resource = findOneById(resourceId);\n\tif(resource)\n\t\tremove(resource);\n});\n\n\n\n\nEThing.arbo = {\n\tload: load,\n\tlastRefreshTs: 0,\n\trefresh: function(){\n\t\tthis.lastRefreshTs = Date.now();\n\t\treturn refresh.apply(this, Array.prototype.slice.call(arguments));\n\t},\n\tremove: remove,\n\tupdate: update,\n\tfindOneById: findOneById,\n\tlist: list,\n\tfind: find,\n\tfindOne: findOne,\n\t\n\t/**\n\t * Check if the resources are loaded (ie. if the {@link EThing.arbo.load} function has been called and has returned).\n\t * @memberof EThing.arbo\n\t * @return {boolean}\n\t */\n\tisLoaded: function(){\n\t\treturn loaddfr === true || ( loaddfr && loaddfr.state() == 'resolved' );\n\t},\n\t\n\t/**\n\t * Returns the root directory. If the {@link EThing.arbo.load} function was not called before, this function will return null.\n\t * @memberof EThing.arbo\n\t * @return {EThing.Folder|null}\n\t */\n\troot: function(){\n\t\treturn root;\n\t}\n};\n\nmodule.exports = EThing.arbo;\n","var EThing = require(\"../core.js\");\nvar utils = require(\"../utils.js\");\nvar Device = require(\"../device.js\");\n\nDevice.MQTT = {};\n\nDevice.MQTT.getSubscription = function(dev, callback){\n\tvar context;\n\t\n\tif(dev instanceof Device){\n\t\tcontext = dev;\n\t\tdev = dev.id();\n\t}\n\telse if(!utils.isId(dev))\n\t\tthrow \"First argument must be a Device object or a Device id !\";\n\t\n\treturn EThing.request({\n\t\t'url': '/devices/' + dev + '/subscription',\n\t\t'dataType': 'json',\n\t\t'context': context,\n\t\t'converter': function(subs){\n\t\t\tif(context instanceof Device){\n\t\t\t\t// attach this specification to the device\n\t\t\t\tcontext.subscription = subs;\n\t\t\t}\n\t\t\treturn subs;\n\t\t}\n\t},callback);\n\t\n};\n\n\nmodule.exports = Device.MQTT;\n\n","var EThing = require(\"../core.js\");\nvar utils = require(\"../utils.js\");\nvar Device = require(\"../device.js\");\n\n\nDevice.Http = {};\n\n\nDevice.Http.getSpecification = function(dev, callback){\n\tvar context;\n\t\n\tif(dev instanceof Device){\n\t\tcontext = dev;\n\t\tdev = dev.id();\n\t}\n\telse if(!utils.isId(dev))\n\t\tthrow \"First argument must be a Device object or a Device id !\";\n\t\n\treturn EThing.request({\n\t\t'url': '/devices/' + dev + '/specification',\n\t\t'dataType': 'json',\n\t\t'context': context,\n\t\t'converter': function(spec){\n\t\t\tif(context instanceof Device){\n\t\t\t\t// attach this specification to the device\n\t\t\t\tcontext.swaggerSpecification = spec;\n\t\t\t}\n\t\t\treturn spec;\n\t\t}\n\t},callback);\n\t\n};\n\nmodule.exports = Device.Http;\n","\nvar EThing = require(\"./core.js\");\nvar utils = require(\"./utils.js\");\nvar Resource = require(\"./resource.js\");\nvar Deferred = require(\"./deferred.js\");\n\n/**\n * Constructs a Rule instance from an object decribing a rule. Should not be called directly. Use instead {@link EThing.list}.\n * @protected\n * @class The Rule resource handle an application\n * @memberof EThing\n * @extends EThing.Resource\n * @param {object} json\n */\nvar Rule = function(json)\n{\n\tResource.call(this, json);\n}\nutils.inherits(Rule, Resource);\n\n// specific methods\n\n/**\n * Returns true if this rule is enabled.\n * @this {EThing.Rule}\n * @returns {boolean}\n */\nRule.prototype.enabled = function() {\n\treturn !!this._json.enabled;\n}\n\n/**\n * Returns the id of the script file.\n * @this {EThing.Rule}\n * @returns {string}\n */\nResource.prototype.script = function(){\n\treturn this._json.script;\n}\n\n/**\n * Returns an object describing the event.\n * @this {EThing.Rule}\n * @returns {object}\n */\nResource.prototype.event = function(){\n\treturn this._json.event;\n}\n\n/**\n * Returns the last exit code returned by the script of this rule.\n * @this {EThing.Rule}\n * @returns {number}\n */\nRule.prototype.scriptReturnCode = function() {\n\treturn this._json.script_return_code;\n}\n\n/**\n * Returns the number of times this rule has been executed.\n * @this {EThing.Rule}\n * @returns {number}\n */\nRule.prototype.scriptExecutionCount = function() {\n\treturn this._json.script_execution_count;\n}\n\n/**\n * Returns the last time this rule has been executed.\n * @this {EThing.Rule}\n * @returns {Date}\n */\nRule.prototype.scriptExecutionDate = function() {\n\treturn new Date(this._json.script_execution_date);\n}\n\n\n/**\n * Run this rule.\n * @this {EThing.Rule}\n * @param {function(data,XHR,options)} [callback] it is executed once the request is complete whether in failure or success\n * @returns {EThing.Rule} The instance on which this method was called.\n */\nRule.prototype.execute = function(callback){\n\tvar args = [].slice.call(arguments);\n\treturn this.deferred(function(){\n\t\t\targs.unshift(this);\n\t\t\treturn Rule.execute.apply(EThing, args);\n\t\t});\n}\n\n\n\n/**\n * Creates a new Rule from the following attributes :\n *   - name {string} __required__ the name of the rule\n *   - script {EThing.File} __required__ the JavaScript code to be executed\n *   - event {object} __required__ the event object describing when to execute this rule\n *       - event.type {string} __required__ the type name of the event (Timer, ResourceCreated, ...)\n *       - event.*  some options depending of the type of event\n *   - script_args {string} an optional string holding the arguments to pass to the script\n *\n * @method EThing.Rule.create\n * @param {object} attributes\n * @param {function(data,XHR,options)} [callback] it is executed once the request is complete whether in failure or success\n * @returns {Deferred} a {@link http://api.jquery.com/category/deferred-object/|jQuery like Promise object}. {@link EThing.request|More ...} \n * @fires EThing#ething.rule.created\n * @example\n * EThing.Rule.create({\n *   name: \"myRule\",\n *   script: <script_id>,\n *   event: {\n *     type: 'ResourceCreated' // this rule will be fired each time a resource is created !\n *   }\n * }).done(function(resource){\n *     console.log('the new rule is created');\n * })\n */\nRule.create = function(json,callback){\n    \n    if(json.script instanceof EThing.Resource)\n        json.script = json.script.id();\n    \n\treturn EThing.request({\n\t\t'url': '/rules',\n\t\t'dataType': 'json',\n\t\t'method': 'POST',\n\t\t'contentType': \"application/json; charset=utf-8\",\n\t\t'data': json,\n\t\t'converter': EThing.resourceConverter\n\t},callback).done(function(r){\n\t\tEThing.trigger('ething.rule.created',[r]);\n\t});\n    \n\t\n};\n\n\n/*\nResource,callback\n*/\nRule.execute = function(a,b)\n{\n\tvar file_id = null, context;\n\tif(a instanceof Rule){\n\t\tcontext = a;\n\t\tfile_id = a.id();\n\t}\n\telse if(utils.isId(a))\n\t\tfile_id = a;\n\telse {\n\t\tthrow \"First argument must be a Rule object or a rule id !\";\n\t\treturn;\n\t}\n\t\n\tvar callback = b;\n\t\n\treturn EThing.request({\n\t\t'url': '/rules/' + file_id + '/execute',\n\t\t'method': 'GET',\n\t\t'dataType': 'text',\n\t\t'context': context\n\t},callback);\n};\n\n\nEThing.Rule = Rule;\n\t\nmodule.exports = Rule;\n","\nvar EThing = require(\"./core.js\");\nvar utils = require(\"./utils.js\");\nvar Resource = require(\"./resource.js\");\nvar Deferred = require(\"./deferred.js\");\n\n/**\n * Constructs an App instance from an object decribing an application. Should not be called directly. Use instead {@link EThing.list}.\n * @protected\n * @class The App resource handle an application\n * @memberof EThing\n * @extends EThing.Resource\n * @param {object} json\n */\nvar App = function(json)\n{\n\tResource.call(this, json);\n}\nutils.inherits(App, Resource);\n\n// specific methods\n\n/**\n * Returns the size of this application in bytes.\n * @this {EThing.App}\n * @returns {number}\n */\nApp.prototype.size = function() {\n\treturn this._json.size || 0;\n}\n\n/**\n * If this application has an icon, it returns his link, else it returns null.\n * \n * @this {EThing.App}\n * @param {boolean} [auth=false] wether or not attach any authentication element. Necessary if you are not using {@link EThing.request}.\n * @returns {string|null}\n * @example\n * // the simple way\n * var image = new Image();\n * image.src = imageFile.iconLink(true);\n * document.body.appendChild(image);\n *\n * // the hard way\n * EThing.request({\n *   url: imageFile.iconLink(),\n *   dataType: \"blob\"\n * }).done(function(blobData){\n *   // success\n *   var image = new Image();\n *   image.src = window.URL.createObjectURL( blobData );\n *   \n *   document.body.appendChild(image);\n * });\n */\nApp.prototype.iconLink = function(auth) {\n\treturn this._json.hasIcon ? EThing.toApiUrl('apps/'+this.id()+'/icon',auth) : null;\n}\n\n/**\n * Returns the link to access the content.\n * @this {EThing.App}\n * @param {boolean} [auth=false] wether or not attach any authentication element. Necessary if you are not using {@link EThing.request}.\n * @returns {string}\n * @example\n * // using EThing.request() :\n * EThing.request(app.getContentUrl()).done(function(content){\n *   // success\n *   console.log('content as text : '+content);\n * });\n */\nApp.prototype.getContentUrl = function(auth) {\n\treturn EThing.toApiUrl('apps/'+this.id(),auth);\n}\n\n/**\n * Last time the content of this resource was modified\n * @this {EThing.App}\n * @returns {Date}\n */\nApp.prototype.contentModifiedDate = function() {\n\treturn new Date(this._json.contentModifiedDate);\n}\n\n/**\n * Return the scope of this app.\n * @this {EThing.App}\n * @returns {string}\n */\nApp.prototype.scope = function() {\n  return (typeof this._json.scope == 'string') ? this._json.scope : '';\n}\n\n/**\n * Return the version of this app or null if this app is not versioned.\n * @this {EThing.App}\n * @returns {string}\n */\nApp.prototype.version = function() {\n  return this._json.version || null;\n}\n\n/**\n * Gets the code of this application in text/html.\n * @this {EThing.App}\n * @param {function(data,XHR,options)} [callback] it is executed once the request is complete whether in failure or success\n * @returns {EThing.App} The instance on which this method was called.\n */\nApp.prototype.read = function(callback){\n\tvar args = [].slice.call(arguments);\n\treturn this.deferred(function(){\n\t\t\targs.unshift(this);\n\t\t\treturn App.read.apply(EThing, args);\n\t\t});\n}\n\n/**\n * Writes some HTML script in this application. Only available for {@link EThing.App#isEditable|editable app}\n * @this {EThing.App}\n * @param {string} data the full HTML script\n * @param {function(data,XHR,options)} [callback] it is executed once the request is complete whether in failure or success\n * @returns {EThing.App} The instance on which this method was called.\n */\nApp.prototype.write = function(data, callback){\n\tvar args = [].slice.call(arguments);\n\treturn this.deferred(function(){\n\t\t\targs.unshift(this);\n\t\t\treturn App.write.apply(EThing, args);\n\t\t});\n}\n\n\n\n\n/**\n * Creates a new Application from the following attributes :\n *   - name {string} __required__ the name of the application\n *   - description {string} a string describing this application \n *   - data {object} key/value pairs to attach to this application\n *   - content {string} the full base64 encoded script\n *   - icon {string} the base64 encoded icon of this application\n *\n * @method EThing.App.create\n * @param {object} attributes\n * @param {function(data,XHR,options)} [callback] it is executed once the request is complete whether in failure or success\n * @returns {Deferred} a {@link http://api.jquery.com/category/deferred-object/|jQuery like Promise object}. {@link EThing.request|More ...} \n * @fires EThing#ething.app.created\n * @example\n * EThing.App.create({\n *   name: \"myApp\",\n *   content: \"<html><body>hello world !</body></html>\",\n *   icon: <icon_data>, // File, Blob, ArrayBuffer or base64 string\n *   scope: \"resource:read profile:read\",\n * }).done(function(resource){\n *     console.log('the new app can be accessed through : ' + resource.url());\n * })\n */\nApp.create = function(json,callback){\n\t\n\t// encode the content to base64 string\n\tif(json.content) json.content = utils.btoa(json.content);\n\t\n\t// encode the icon into base64 string\n\tif(json.icon){\n\t\t\n\t\tif(json.icon instanceof utils.Blob){\n\t\t\t// asynchronous\n\t\t\t\n\t\t\tif(!utils.FileReader)\n\t\t\t\tthrow 'no FileReader instance found';\n\t\t\tvar reader = new utils.FileReader(), dfr = Deferred();\n\t\t\treader.onloadend = function() {\n\t\t\t  json.icon = reader.result.substr(reader.result.indexOf(';base64,')+8);\n\t\t\t  \n\t\t\t  EThing.request({\n\t\t\t\t'url': '/apps',\n\t\t\t\t'dataType': 'json',\n\t\t\t\t'method': 'POST',\n\t\t\t\t'contentType': \"application/json; charset=utf-8\",\n\t\t\t\t'data': json,\n\t\t\t\t'converter': EThing.resourceConverter\n\t\t\t  }).done(function(){\n\t\t\t\tdfr.resolveWith(this, Array.prototype.slice.call(arguments));\n\t\t\t  }).fail(function(){\n\t\t\t\tdfr.rejectWith(this, Array.prototype.slice.call(arguments));\n\t\t\t  });\n\t\t\t  \n\t\t\t}\n\t\t\treader.readAsDataURL(json.icon);\n\t\t\t\n\t\t\treturn dfr.done(callback).done(function(){\n\t\t\t\tEThing.trigger('ething.app.created',[this]);\n\t\t\t}).promise();\n\t\t}\n\t\telse if(json.icon instanceof ArrayBuffer){\n\t\t\tvar binary = '',\n\t\t\t\tbytes = new Uint8Array(json.icon);\n\t\t\tfor (var i = 0; i < bytes.byteLength; i++) {\n\t\t\t\tbinary += String.fromCharCode( bytes[ i ] );\n\t\t\t}\n\t\t\tjson.icon = utils.btoa(binary);\n\t\t}\n\t\telse if(json.icon != 'string')\n\t\t\tthrow 'invalid type for the icon attribute';\n\t\t\n\t}\n\t\n\treturn EThing.request({\n\t\t'url': '/apps',\n\t\t'dataType': 'json',\n\t\t'method': 'POST',\n\t\t'contentType': \"application/json; charset=utf-8\",\n\t\t'data': json,\n\t\t'converter': EThing.resourceConverter\n\t},callback).done(function(r){\n\t\tEThing.trigger('ething.app.created',[r]);\n\t});\n\t\n};\n\n\n/*\nResource,callback\n*/\nApp.read = function(a,b)\n{\n\tvar file_id = null, context;\n\tif(a instanceof App){\n\t\tcontext = a;\n\t\tfile_id = a.id();\n\t}\n\telse if(utils.isId(a))\n\t\tfile_id = a;\n\telse {\n\t\tthrow \"First argument must be an App object or an app id !\";\n\t\treturn;\n\t}\n\t\n\tvar callback = b;\n\t\n\treturn EThing.request({\n\t\t'url': '/apps/' + file_id,\n\t\t'method': 'GET',\n\t\t'dataType': 'text',\n\t\t'context': context\n\t},callback);\n};\n\n/*\nResource,data,callback\n*/\nApp.write = function(a,b,c)\n{\n\tvar file_id = null, context;\n\tif(a instanceof App){\n\t\tcontext = a;\n\t\tfile_id = a.id();\n\t}\n\telse if(utils.isId(a))\n\t\tfile_id = a;\n\telse {\n\t\tthrow \"First argument must be a App object or an app id !\";\n\t\treturn;\n\t}\n\t\n\tif( typeof b != 'string') {\n\t\tthrow \"Second argument must be a string !\";\n\t\treturn;\n\t}\n\t\n\tvar callback = c;\n\t\n\treturn EThing.request({\n\t\t'url': '/apps/' + file_id,\n\t\t'dataType': 'json',\n\t\t'method': 'PUT',\n\t\t'contentType': (typeof b == 'string') ? 'text/plain' : 'application/octet-stream',\n\t\t'data': b,\n\t\t'context': context,\n\t\t'converter': EThing.resourceConverter\n\t},callback);\n};\n\n/*\nResource,callback\nreturn data as blob\n*/\nApp.getIcon = function(a,b)\n{\n\tvar file_id = null, context;\n\tif(a instanceof App){\n\t\tcontext = a;\n\t\tfile_id = a.id();\n\t}\n\telse if(utils.isId(a))\n\t\tfile_id = a;\n\telse {\n\t\tthrow \"First argument must be a App object or an app id !\";\n\t\treturn;\n\t}\n\t\n\tvar callback = b;\n\t\n\treturn EThing.request({\n\t\t'url': '/apps/' + file_id + '/icon',\n\t\t'method': 'GET',\n\t\t'dataType': utils.isNode ? 'buffer' : 'blob',\n\t\t'context': context\n\t},callback);\n};\n\nEThing.App = App;\n\t\nmodule.exports = App;\n","var EThing = require(\"./core.js\");\nvar utils = require(\"./utils.js\");\nvar Resource = require(\"./resource.js\");\n\n\n\n/**\n * Constructs a Table instance from an object decribing a table. Should not be called directly. Use instead {@link EThing.list}.\n * @protected\n * @class The Table resource handle data in rows and columns\n * @memberof EThing\n * @extends EThing.Resource\n * @param {object} json\n */\nvar Table = function(json)\n{\n\tResource.call(this, json);\n}\nutils.inherits(Table, Resource);\n\n\n// specific methods\n/**\n * The number of rows in this table\n * @this {EThing.Table}\n * @returns {number}\n */\nTable.prototype.length = function(){\n\treturn this._json['length'];\n}\n/**\n * The maximum number of rows allowed in this table. Returns null if this feature is disable (number of rows is unlimited).\n * @this {EThing.Table}\n * @returns {number|null}\n */\nTable.prototype.maxLength = function(){\n\treturn this._json.maxLength;\n}\n/**\n * Returns the amount of seconds after which a __row__ is automatically removed, or null if this feature is not enable.\n * @this {EThing.Table}\n * @returns {number}\n */\nTable.prototype.expireAfter = function(){\n\treturn this._json.expireAfter;\n}\n/**\n * Returns the keys in this table. __The default keys (\"id\" and \"date\" are not listed)__.\n * @this {EThing.Table}\n * @returns {string[]}\n */\nTable.prototype.keys = function(){\n\tvar keys = [];\n\tfor(var k in this._json.keys)\n\t\tif(this._json.keys.hasOwnProperty(k))\n\t\t\tkeys.push(k);\n\treturn keys;\n}\n/**\n * Last time the content of this resource was modified\n * @this {EThing.Table}\n * @returns {Date}\n */\nTable.prototype.contentModifiedDate = function() {\n\treturn new Date(this._json.contentModifiedDate);\n}\n/**\n * Returns rows.\n * @this {EThing.Table}\n * @param {Object} [options] Customize the selection\n * @param {number} [options.start=0] Position of the first rows to return. If start is negative, it starts from the end.\n * @param {number} [options.length] Maximum number of rows to return.\n * @param {string} [options.sort] The key on which to do the sorting, by default the sort is made by date.\n * @param {string} [options.query] A query string to filter the results.\n * @param {string} [options.fields] Fields of the results to return. If omitted, all the fields are returned.\n * @param {string} [options.datefmt] the format of the date field (values: \"RFC3339\"(default), \"TIMESTAMP\", \"TIMESTAMP_MS\", \"ISO8601\", \"RSS\").\n * @param {function(data,XHR,options)} [callback] It is executed once the request is complete whether in failure or success\n * @returns {EThing.Table} The instance on which this method was called.\n * @example\n * // returns all the content of a table :\n * table.select().done(function(data){\n *   // success\n * });\n *\n * // returns the last 10 rows sorted by the \"foo\" column :\n * table.select({start: -10, sort: \"foo\"}).done(function(data){\n *   // success\n * });\n *\n */\nTable.prototype.select = function(options,callback){\n\tvar args = [].slice.call(arguments);\n\treturn this.deferred(function(){\n\t\t\targs.unshift(this);\n\t\t\treturn Table.select.apply(EThing, args);\n\t\t});\n}\n/**\n * Performs statistics on a specific column.\n * @this {EThing.Table}\n * @param {string} key The column name on which the statistics should be performed.\n * @param {string} [query] A query string to filter the data.\n * @param {function(statistics,XHR,options)} [callback] It is executed once the request is complete whether in failure or success\n * @returns {Object} The instance on which this method was called.\n *\n */\nTable.prototype.computeStatistics = function(key,query,callback){\n\tvar args = [].slice.call(arguments);\n\treturn this.deferred(function(){\n\t\t\targs.unshift(this);\n\t\t\treturn Table.computeStatistics.apply(EThing, args);\n\t\t});\n}\n/**\n * Removes one or multiple rows.\n * @this {EThing.Table}\n * @param {string|string[]} id The id of the row(s) to be removed\n * @param {function(data,XHR,options)} [callback] it is executed once the request is complete whether in failure or success\n * @returns {EThing.Table} The instance on which this method was called.\n * @example\n * // removes the last 10 rows :\n * table.select(-10).done(function(data){\n *   this.removeRow(data.map(function(row){\n *     return row.id;\n *   }));\n * });\n *\n */\nTable.prototype.removeRow = function(id,callback){\n\tvar args = [].slice.call(arguments);\n\treturn this.deferred(function(){\n\t\t\targs.unshift(this);\n\t\t\treturn Table.removeRow.apply(EThing, args);\n\t\t});\n}\n/**\n * Set new data to a row.\n * @this {EThing.Table}\n * @param {object} data the data to be updated, it must contain the row id.\n * @param {function(data,XHR,options)} [callback] it is executed once the request is complete whether in failure or success\n * @returns {EThing.Table} The instance on which this method was called.\n * @example\n * table.replaceRow({\n * \t 'id': 'g45Tdk4',\n * \t 'value': 45\n * }).done(function(data){\n *   // updated !\n * });\n *\n */\nTable.prototype.replaceRow = function(data,callback){\n\tvar args = [].slice.call(arguments);\n\treturn this.deferred(function(){\n\t\t\targs.unshift(this);\n\t\t\treturn Table.replaceRow.apply(EThing, args);\n\t\t});\n}\n\n/**\n * Finds a single row matching the query and replaces it.\n * @this {EThing.Table}\n * @param {string} query A query string to filter the data.\n * @param {object} data the new data.\n * @param {boolean} [upsert] If true, the data will be inserted if no match is found. (default to false).\n * @param {function(data,XHR,options)} [callback] it is executed once the request is complete whether in failure or success\n * @returns {EThing.Table} The instance on which this method was called.\n * @example\n * table.findOneAndReplace(\"name=='foo'\", {\n * \t 'name': 'foo',\n * \t 'value': 'bar'\n * }).done(function(table){\n *   // updated or inserted if not found !\n * });\n *\n */\nTable.prototype.findOneAndReplace = function(query,data,upsert,callback){\n\tvar args = [].slice.call(arguments);\n\treturn this.deferred(function(){\n\t\t\targs.unshift(this);\n\t\t\treturn Table.findOneAndReplace.apply(EThing, args);\n\t\t});\n}\n\n/**\n * Insert new data into the table. The data argument must be a key/value object.\n * @this {EThing.Table}\n * @param {object} data\n * @param {string} [invalid_field] The behaviour to adopt when an invalid field name appears. The value must be one of the following : \"rename\",\"stop\",\"skip\",\"none\".\n * @param {function(data,XHR,options)} [callback] it is executed once the request is complete whether in failure or success\n * @returns {EThing.Table} The instance on which this method was called.\n * @example\n * table.insert({\n *   'field1': \"foobar\",\n *   'field2': 3.14,\n *   'field3': true\n * }).done(function(){\n *   // success\n * });\n *\n */\nTable.prototype.insert = function(data, callback){\n\tvar args = [].slice.call(arguments);\n\treturn this.deferred(function(){\n\t\targs.unshift(this);\n\t\treturn Table.insert.apply(this,args);\n\t});\n}\n\n/**\n * Replace the content of this table by a new set of data.\n * @this {EThing.Table}\n * @param {object[]} data\n * @param {string} [invalid_field] The behaviour to adopt when an invalid field name appears. The value must be one of the following : \"rename\",\"stop\",\"skip\",\"none\".\n * @param {bool} [skip_error] Whether to skip data on error or not\n * @param {function(data,XHR,options)} [callback] it is executed once the request is complete whether in failure or success\n * @returns {EThing.Table} The instance on which this method was called.\n * // copy table content\n * var tableSrc, tableDst;\n * tableSrc.select().done(function(data){\n *   tableDst.import(data);\n * });\n *\n */\nTable.prototype.import = function(data, callback){\n\tvar args = [].slice.call(arguments);\n\treturn this.deferred(function(){\n\t\targs.unshift(this);\n\t\treturn Table.import.apply(this,args);\n\t});\n}\n\n/**\n * Returns the link to access the content.\n * @this {EThing.Table}\n * @param {boolean} [auth=false] wether or not attach any authentication element. Necessary if you are not using {@link EThing.request}.\n * @returns {string}\n * @example\n * // using EThing.request() :\n * EThing.request(table.getContentUrl()).done(function(rows){\n *   // success, rows is an array of object \n *   console.log('number of rows : '+rows.length);\n * });\n * \n * // or using jQuery :\n * $.getJSON(table.getContentUrl(true)).done(function(rows){\n *   // success\n * });\n */\nTable.prototype.getContentUrl = function(auth) {\n\treturn EThing.toApiUrl('tables/'+this.id(),auth);\n}\n\n\n\n\n/**\n * Creates a new Table from the following attributes :\n *   - name {string} __required__ the name of the table\n *   - description {string} a string describing this table \n *   - data {object} key/value pairs to attach to this table\n *   - expireAfter {number} amount of seconds after which a row is automatically removed, 0 means unlimited. Default to 0.\n *   - maxLength {number} the maximum number of rows allowed in this table. 0 means unlimited. Default to 5000.\n *\n * @method EThing.Table.create\n * @param {object} attributes\n * @param {function(data,XHR,options)} [callback] it is executed once the request is complete whether in failure or success\n * @returns {Deferred} a {@link http://api.jquery.com/category/deferred-object/|jQuery like Promise object}. {@link EThing.request|More ...} \n * @fires EThing#ething.table.created\n * @example\n * // get a resource by its id\n * EThing.Table.create({\n *   name: \"foobar\",\n *   expireAfter: 3600*24*7 // the data are automatically removed after 7 weeks\n * }).done(function(resource){\n *     console.log('table created : ' + resource.name());\n * })\n */\nTable.create = function(a,callback){\n\t\n\tif(typeof a == \"string\")\n\t\ta = {\n\t\t\t'name': a\n\t\t};\n\n\treturn EThing.request({\n\t\t'url': '/tables',\n\t\t'dataType': 'json',\n\t\t'method': 'POST',\n\t\t'contentType': \"application/json; charset=utf-8\",\n\t\t'data': a,\n\t\t'converter': EThing.resourceConverter\n\t},callback).done(function(r){\n\t\tEThing.trigger('ething.table.created',[r]);\n\t});\n\t\n};\n\n\nTable.select = function(a,options,callback){\n\n\tvar table_id = null, context;\n\tif(a instanceof Table){\n\t\tcontext = a;\n\t\ttable_id = a.id();\n\t}\n\telse if(utils.isId(a))\n\t\ttable_id = a;\n\telse {\n\t\tthrow \"First argument must be a Table object or a table id !\";\n\t\treturn;\n\t}\n\t\n\tif((typeof callback == 'undefined') && (typeof options == 'function')){\n\t\tcallback = options;\n\t\toptions = null;\n\t}\n\t\n\toptions = options || {};\n\t\n\tif(Array.isArray(options.fields)){\n\t\toptions.fields = options.fields.join(',');\n\t}\n\t\n\t\n\treturn EThing.request({\n\t\t'url': '/tables/' + table_id + '?' + utils.param({'start':options.start,'length':options.length,'sort':options.sort,'q':options.query,'fields':options.fields,'datefmt':options.datefmt}),\n\t\t'method': 'GET',\n\t\t'dataType': 'json',\n\t\t'context': context\n\t},callback);\n\t\n}\n\nTable.computeStatistics = function(a,key,query,callback){\n\n\tvar table_id = null, context;\n\tif(a instanceof Table){\n\t\tcontext = a;\n\t\ttable_id = a.id();\n\t}\n\telse if(utils.isId(a))\n\t\ttable_id = a;\n\telse {\n\t\tthrow \"First argument must be a Table object or a table id !\";\n\t\treturn;\n\t}\n\t\n\tif((typeof callback == 'undefined') && (typeof query == 'function')){\n\t\tcallback = query;\n\t\tquery = null;\n\t}\n\t\n\t\n\treturn EThing.request({\n\t\t'url': '/tables/' + table_id + '/statistics?' + utils.param({'key':key,'q':query}),\n\t\t'method': 'GET',\n\t\t'dataType': 'json',\n\t\t'context': context\n\t},callback);\n\t\n}\n\n\n/*\nTable,id,callback\n*/\nTable.removeRow = function(a,b,c){\n\n\tvar table_id = null, context;\n\tif(a instanceof Table){\n\t\tcontext = a;\n\t\ttable_id = a.id();\n\t}\n\telse if(utils.isId(a))\n\t\ttable_id = a;\n\telse {\n\t\tthrow \"First argument must be a Table object or a table id !\";\n\t\treturn;\n\t}\n\t\n\tvar id = Array.isArray(b) ? b : [b];\n\tvar callback = c;\n\t\n\treturn EThing.request({\n\t\t'url': '/tables/' + table_id + '/remove',\n\t\t'dataType': 'json',\n\t\t'method': 'POST',\n\t\t'contentType': \"application/json; charset=utf-8\",\n\t\t'data': id,\n\t\t'context': context,\n\t\t'converter': EThing.resourceConverter\n\t},callback);\n\t\n}\n\n/*\nTable,data,callback\n*/\nTable.replaceRow = function(a,b,c){\n\n\tvar table_id = null, context;\n\tif(a instanceof Table){\n\t\tcontext = a;\n\t\ttable_id = a.id();\n\t}\n\telse if(utils.isId(a))\n\t\ttable_id = a;\n\telse {\n\t\tthrow \"First argument must be a Table object or a table id !\";\n\t\treturn;\n\t}\n\t\n\tif(typeof b === 'object' && !utils.isId(b.id))\n\t\tthrow \"Second argument must be an object containing at least a document id\";\n\t\n\tvar docId = b.id\n\tvar callback = c;\n\t\n\treturn EThing.request({\n\t\t'url': '/tables/' + table_id + '/id/'+docId,\n\t\t'dataType': 'json',\n\t\t'method': 'POST',\n\t\t'contentType': \"application/json; charset=utf-8\",\n\t\t'data': b,\n\t\t'context': context,\n\t\t'headers': {\n\t\t\t\"X-HTTP-Method-Override\": \"PATCH\"\n\t\t}\n\t},callback);\n\t\n}\n\n/*\nTable,query,data[,upsert][,callback]\n*/\nTable.findOneAndReplace = function(a,b,c,d,e){\n\n\tvar table_id = null, context, callback = e, upsert = false;\n\tif(a instanceof Table){\n\t\tcontext = a;\n\t\ttable_id = a.id();\n\t}\n\telse if(utils.isId(a))\n\t\ttable_id = a;\n\telse {\n\t\tthrow \"First argument must be a Table object or a table id !\";\n\t\treturn;\n\t}\n\t\n\tif(typeof b !== 'string')\n\t\tthrow \"Second argument must be a query string\";\n\t\n\tif(typeof c !== 'object')\n\t\tthrow \"Third argument must be an object\";\n\t\n\tif(typeof e === 'undefined' && typeof d === 'function'){\n\t\tcallback = d;\n\t\tupsert = false;\n\t}\n\tif(typeof d === 'boolean') {\n\t\tupsert = d;\n\t}\n\t\n\treturn EThing.request({\n\t\t'url': '/tables/' + table_id + '/replace?' + utils.param({'q':b, 'upsert':upsert}),\n\t\t'dataType': 'json',\n\t\t'method': 'POST',\n\t\t'contentType': \"application/json; charset=utf-8\",\n\t\t'data': c,\n\t\t'context': context,\n\t\t'converter': EThing.resourceConverter\n\t},callback);\n\t\n}\n\n/*\nTable,kv,callback\nTable,column,data,callback\n\nkv = {\n\t...\n\tcolumnX: valueX,\n\t...\n}\n\nNote : if valueX is null, so no data will be appended and the columnX will be created if it does not exist\n\n*/\nTable.insert = function(a,postData,c,d){\n\t\n\tvar callback, table_id = null, context, invalid_field;\n\t\n\tif(a instanceof Table){\n\t\tcontext = a;\n\t\ttable_id = a.id();\n\t}\n\telse if(utils.isId(a))\n\t\ttable_id = a;\n\telse {\n\t\tthrow \"First argument must be a Table object or a table id !\";\n\t\treturn;\n\t}\n\t\n\tif( typeof c == 'string' ){\n\t\tinvalid_field = c;\n\t\tcallback = d;\n\t}\n\telse {\n\t\tcallback = c;\n\t}\n\t\n\t\n\treturn EThing.request({\n\t\t'url': '/tables/' + table_id + '?' + utils.param({'invalid_field':invalid_field}),\n\t\t'dataType': 'json',\n\t\t'method': 'POST',\n\t\t'contentType': \"application/json; charset=utf-8\",\n\t\t'data': postData,\n\t\t'context': context,\n\t\t'converter': EThing.resourceConverter\n\t},callback);\n\t\n}\n\n\nTable.import = function(table,data){\n\tvar context,invalid_field,skip_error,callback;\n\t\n\tif(table instanceof Table){\n\t\tcontext = table;\n\t\ttable = table.id();\n\t}\n\telse if(!utils.isId(table)){\n\t\tthrow \"First argument must be a Table object or a table id !\";\n\t\treturn;\n\t}\n\t\n\tif(!Array.isArray(data))\n\t\tthrow \"The data must be an array of objects\";\n\t\n\tfor(var i=2; i<arguments.length; i++){\n\t\tswitch(typeof arguments[i]){\n\t\t\tcase 'function':\n\t\t\t\tcallback = arguments[i];\n\t\t\t\tbreak;\n\t\t\tcase 'boolean':\n\t\t\t\tskip_error = arguments[i];\n\t\t\t\tbreak;\n\t\t\tcase 'string':\n\t\t\t\tinvalid_field = arguments[i];\n\t\t\t\tbreak;\n\t\t}\n\t}\n\t\n\treturn EThing.request({\n\t\t'url': '/tables/' + table + '?' + utils.param({'skip_error':skip_error,'invalid_field':invalid_field}),\n\t\t'dataType': 'json',\n\t\t'method': 'PUT',\n\t\t'contentType': \"application/json; charset=utf-8\",\n\t\t'data': data,\n\t\t'context': context,\n\t\t'converter': EThing.resourceConverter\n\t},callback);\n\t\n}\n\nEThing.Table = Table;\n\nmodule.exports = Table;\n\n","\nvar EThing = require(\"./core.js\");\nvar utils = require(\"./utils.js\");\nvar Resource = require(\"./resource.js\");\n\n\n/**\n * Constructs a File instance from an object decribing a file. Should not be called directly. Use instead {@link EThing.list}.\n * @protected\n * @class The File resource handle regular file such as image or text\n * @memberof EThing\n * @extends EThing.Resource\n * @param {object} json\n */\nvar File = function(json)\n{\n\tResource.call(this, json);\n}\nutils.inherits(File, Resource);\n\n/**\n * Returns the size of this file in bytes.\n * @this {EThing.File}\n * @returns {number}\n */\nFile.prototype.size = function() {\n\treturn this._json.size;\n}\n/**\n * Returns the amount of seconds after the last update after which this file is removed automatically, or null if this feature is not enable (no time limit).\n * @this {EThing.File}\n * @returns {number|null}\n */\nFile.prototype.expireAfter = function(){\n\treturn this._json.expireAfter || null;\n}\n/**\n * Returns the MIME type of this file\n * @this {EThing.File}\n * @returns {string}\n */\nFile.prototype.mime = function(){\n\treturn this._json.mime;\n}\n\n/**\n * Last time the content of this resource was modified\n * @this {EThing.File}\n * @returns {Date}\n */\nFile.prototype.contentModifiedDate = function() {\n\treturn new Date(this._json.contentModifiedDate);\n}\n\n/**\n * If this file has a thumbnail (thumbnail is only available for file with MIME type __image/*__), it returns his link, else it returns null.\n * \n * @this {EThing.File}\n * @param {boolean} [auth=false] wether or not attach any authentication element. Necessary if you are not using {@link EThing.request}.\n * @returns {string|null}\n * @example\n * // the simple way\n * var image = new Image();\n * image.src = imageFile.thumbnailLink(true);\n * document.body.appendChild(image);\n *\n * // the hard way\n * EThing.request({\n *   url: imageFile.thumbnailLink(),\n *   dataType: \"blob\"\n * }).done(function(blobData){\n *   // success\n *   var image = new Image();\n *   image.src = window.URL.createObjectURL( blobData );\n *   \n *   document.body.appendChild(image);\n * });\n */\nFile.prototype.thumbnailLink = function(auth) {\n  return this._json.hasThumbnail ? EThing.toApiUrl('files/'+this.id()+'/thumbnail',auth) : null;\n}\n\n/**\n * Returns the link to access the content.\n * @this {EThing.File}\n * @param {boolean} [auth=false] wether or not attach any authentication element. Necessary if you are not using {@link EThing.request}.\n * @returns {string}\n * @example\n * // using EThing.request() :\n * EThing.request(file.getContentUrl()).done(function(content){\n *   // success\n *   console.log('content as text : '+content);\n * });\n *\n * // HTML <img> Tag :\n * var image = new Image();\n * image.src = imageFile.getContentUrl(true);\n * document.body.appendChild(image);\n */\nFile.prototype.getContentUrl = function(auth) {\n\treturn EThing.toApiUrl('files/'+this.id(),auth);\n}\n\n/**\n * Returns true if this file has text based content.\n * @this {EThing.File}\n * @returns {boolean}\n */\nFile.prototype.isText = function() {\n\treturn this._json.isText;\n}\n\n/**\n * Returns true if this file is a script.\n * @this {EThing.File}\n * @returns {boolean}\n */\nFile.prototype.isScript = function() {\n\treturn this._json.isText && this._json.mime === 'application/javascript';\n}\n\n// specific methods\n\n/**\n * Execute a script file.\n * @this {EThing.File}\n * @param {string} [arguments] a string containing the arguments\n * @param {function(data,XHR,options)} [callback] it is executed once the request is complete whether in failure or success\n * @returns {EThing.File} The instance on which this method was called.\n * @example\n * file.execute().done(function(result){\n *   // success\n *   console.log(result);\n * });\n *\n */\nFile.prototype.execute = function(args, callback){\n\tvar args = [].slice.call(arguments);\n\treturn this.deferred(function(){\n\t\t\targs.unshift(this);\n\t\t\treturn File.execute.apply(EThing, args);\n\t\t});\n}\n\n/**\n * Gets the content of this file as text or as binary data.\n * @this {EThing.File}\n * @param {boolean} [binary] if true, return the content as binary data (as Blob in a browser, or Buffer in NodeJs)\n * @param {function(data,XHR,options)} [callback] it is executed once the request is complete whether in failure or success\n * @returns {EThing.File} The instance on which this method was called.\n * @example\n * file.read().done(function(content){\n *   // success\n *   console.log('content as text : '+content);\n * });\n * \n * // browser :\n * file.read(true).done(function(contentAsBlob){\n *   // success\n * });\n *\n * // NodeJs :\n * var fs = require(\"fs\");\n * EThing.get('kDO5Fk4').done(function(resource){\n * \tresource.read(true).done(function(data){\n * \t\t// data : Buffer instance\n * \t\tfs.writeFile(resource.basename(), data, function(){\n * \t\t\tconsole.log('It\\'s saved!');\n * \t\t});\n * \t});\n * });\n *\n */\nFile.prototype.read = function(binary, callback){\n\tvar args = [].slice.call(arguments);\n\treturn this.deferred(function(){\n\t\t\targs.unshift(this);\n\t\t\treturn File.read.apply(EThing, args);\n\t\t});\n}\n\n/**\n * Writes some content to this file.\n * @this {EThing.File}\n * @param {string|blob|arraybuffer} data\n * @param {function(data,XHR,options)} [callback] it is executed once the request is complete whether in failure or success\n * @returns {EThing.File} The instance on which this method was called.\n * @example\n * file.write(\"hello world !\").done(function(){\n *   // success\n * });\n *\n */\nFile.prototype.write = function(data, callback){\n\tvar args = [].slice.call(arguments);\n\treturn this.deferred(function(){\n\t\t\targs.unshift(this);\n\t\t\treturn File.write.apply(EThing, args);\n\t\t});\n}\n\n\n\n/**\n * Creates a new File from the following attributes :\n *   - name {string} __required__ the name of the file\n *   - description {string} a string describing this file \n *   - data {object} key/value pairs to attach to this file\n *   - expireAfter {number} amount of seconds after the last update after which this file is removed automatically, 0 means unlimited. Default to 0.\n *\n * @method EThing.File.create\n * @param {object} attributes\n * @param {function(data,XHR,options)} [callback] it is executed once the request is complete whether in failure or success\n * @returns {Deferred} a {@link http://api.jquery.com/category/deferred-object/|jQuery like Promise object}. {@link EThing.request|More ...} \n * @fires EThing#ething.file.created\n * @example\n * EThing.File.create({\n *   name: \"foobar.txt\",\n *   description: \"this is my file\"\n * }).done(function(resource){\n *     console.log('file created : ' + resource.name());\n * })\n */\nFile.create = function(a,callback){\n\t\n\tif(typeof a == \"string\")\n\t\ta = {\n\t\t\t'name': a\n\t\t};\n\t\n\treturn EThing.request({\n\t\t'url': '/files',\n\t\t'dataType': 'json',\n\t\t'method': 'POST',\n\t\t'contentType': \"application/json; charset=utf-8\",\n\t\t'data': a,\n\t\t'converter': EThing.resourceConverter\n\t},callback).done(function(r){\n\t\tEThing.trigger('ething.file.created',[r]);\n\t});\n\t\n};\n\n/*\nResource,boolean,callback{function({string|buffer})}\n*/\nFile.read = function(file, binary, callback)\n{\n\tvar context;\n\tif(file instanceof File){\n\t\tcontext = file;\n\t\tfile = file.id();\n\t}\n\telse if(!utils.isId(file)){\n\t\tthrow \"First argument must be a File object or a file id !\";\n\t}\n\t\n\tif(typeof callback == 'undefined' && typeof binary == 'function'){\n\t\tcallback = binary;\n\t\tbinary = false;\n\t}\n\t\n\treturn EThing.request({\n\t\t'url': '/files/' + file,\n\t\t'method': 'GET',\n\t\t'dataType': binary ? (utils.isNode ? 'buffer' : 'blob') : 'text',\n\t\t'context': context\n\t},callback);\n};\n\n/*\nResource,args,callback{function({object})}\n*/\nFile.execute = function(file, args, callback)\n{\n\tvar context;\n\tif(file instanceof File){\n\t\tcontext = file;\n\t\tfile = file.id();\n\t}\n\telse if(!utils.isId(file)){\n\t\tthrow \"First argument must be a File object or a file id !\";\n\t}\n\t\n\tif(typeof callback === 'undefined' && typeof args === 'function'){\n\t\tcallback = args;\n\t\targs = null;\n\t}\n\t\n\treturn EThing.request({\n\t\t'url': '/files/' + file + '/execute?' + utils.param({'args':args}),\n\t\t'method': 'GET',\n\t\t'dataType': 'json',\n\t\t'context': context\n\t},callback);\n};\n\n/*\nResource,data{string},callback{function({EThing.File})}\n*/\nFile.write = function(a,b,c)\n{\n\tvar file_id = null, context;\n\tif(a instanceof File){\n\t\tcontext = a;\n\t\tfile_id = a.id();\n\t}\n\telse if(utils.isId(a))\n\t\tfile_id = a;\n\telse {\n\t\tthrow \"First argument must be a File object or a file id !\";\n\t\treturn;\n\t}\n\t\n\tvar callback = c;\n\t\n\treturn EThing.request({\n\t\t'url': '/files/' + file_id,\n\t\t'dataType': 'json',\n\t\t'method': 'PUT',\n\t\t'contentType': (typeof b == 'string') ? 'text/plain' : 'application/octet-stream',\n\t\t'data': b,\n\t\t'context': context,\n\t\t'converter': EThing.resourceConverter\n\t},callback);\n};\n\nEThing.File = File;\n\nmodule.exports = File;\n","\nvar EThing = require(\"./core.js\");\n\n\n/**\n * Send a notification.\n * @memberof EThing\n * @param {string} [subject] The subject of the notification\n * @param {string} message The message of the notification\n * @param {function(data,XHR,options)} [callback] it is executed once the request is complete whether in failure or success\n * @returns {Deferred} a {@link http://api.jquery.com/category/deferred-object/|jQuery like Promise object}. {@link EThing.request|More ...} \n * @example\n * EThing.notify(\"hello world\")\n *   .done(function(){\n *     alert(\"A notification has been sent\");\n *   })\n */\nvar notify = function(subject,message, callback){\n\tvar query = {};\n\t\n\tif(arguments.length == 3){\n\t\tquery['body'] = message;\n\t\tquery['subject'] = subject;\n\t}\n\telse if(arguments.length == 2){\n\t\tif(typeof message == 'string'){\n\t\t\tquery['subject'] = subject;\n\t\t\tquery['body'] = message;\n\t\t}\n\t\telse{\n\t\t\tquery['body'] = subject;\n\t\t\tcallback = message;\n\t\t}\n\t}\n\telse if(arguments.length == 1){\n\t\tquery['body'] = subject;\n\t}\n\telse {\n\t\tthrow \"Bad arguments!\";\n\t\treturn;\n\t}\n\t\n\treturn EThing.request({\n\t\t'url': '/notification',\n\t\t'method': 'POST',\n\t\t'contentType': \"application/json; charset=utf-8\",\n\t\t'data': query\n\t},callback);\n}\n\n\nEThing.notify = notify;\n\nmodule.exports = notify;\n","\t\nvar EThing = require(\"./core.js\");\nvar utils = require(\"./utils.js\");\n\n\n\n/*\n* Settings\n*/\n\nvar settings = {};\n\n/**\n * Retrieve the settings.\n * @memberof EThing.settings\n * @this {EThing.settings}\n * @param {function(data,XHR,options)} [callback] it is executed once the request is complete whether in failure or success\n * @returns {Deferred} a {@link http://api.jquery.com/category/deferred-object/|jQuery like Promise object}. {@link EThing.request|More ...} \n */\n\nsettings.get = function(callback){\n\treturn EThing.request({\n\t\t'url': '/settings',\n\t\t'dataType': 'json',\n\t\t'method': 'GET'\n\t},callback);\n};\n\n/**\n * Update the settings.\n * @memberof EThing.settings\n * @this {EThing.settings}\n * @param {object} [data] updated settings object\n * @param {function(data,XHR,options)} [callback] it is executed once the request is complete whether in failure or success\n * @returns {Deferred} a {@link http://api.jquery.com/category/deferred-object/|jQuery like Promise object}. {@link EThing.request|More ...} \n */\nsettings.set = function(data, callback){\n\t\n\tif(!utils.isPlainObject(data))\n\t\tthrow \"First argument must be an object !\";\n\t\n\t\n\treturn EThing.request({\n\t\t'url': '/settings',\n\t\t'dataType': 'json',\n\t\t'method': 'POST',\n\t\t'contentType': \"application/json; charset=utf-8\",\n\t\t'data': data,\n\t\t'headers': {\n\t\t\t\"X-HTTP-Method-Override\": \"PATCH\"\n\t\t}\n\t},callback);\n};\n\nEThing.settings = settings;\n\nmodule.exports = settings;\n\n\n","\nvar utils = require('./utils');\n\nvar Error_ = function(json){\n\tthis.constructor.prototype.__proto__ = Error.prototype\n\tError.captureStackTrace(this, this.constructor)\n\tthis.name = 'EThing.Error';\n\tif(typeof json == \"string\")\n\t\tjson = {\n\t\t\tmessage: json\n\t\t};\n\tif(json instanceof Error)\n\t\tjson = {\n\t\t\tmessage: json.message\n\t\t};\n\tutils.extend(this, {\n\t\tmessage: 'unknown error'\n\t}, json);\n}\n\n\nmodule.exports = Error_;\n\t\n","// browser specific code\n\nmodule.exports = {\n\t\n\t\"isNode\": false,\n\t\n\t\"btoa\": window.btoa,\n\t\n\t\"atob\" : window.atob,\n\t\n\t\"XMLHttpRequest\": window.XMLHttpRequest,\n\t\n\t'Blob': window.Blob,\n\t\n\t'Buffer': function(){},\n\t\n\t'FileReader': window.FileReader || null,\n\t\n\t'FileReaderSync': window.FileReaderSync || null\n\n};","/**\n * EThing - javascript API of the EThing project\n * @version v0.1.0\n */\n\n\nvar EThing = require(\"./core.js\");\n\nrequire(\"./resource.js\");\nrequire(\"./settings.js\");\nrequire(\"./notify.js\");\nrequire(\"./file.js\");\nrequire(\"./table.js\");\nrequire(\"./app.js\");\nrequire(\"./rule.js\");\nrequire(\"./device.js\");\nrequire(\"./devices/http.js\");\nrequire(\"./devices/mqtt.js\");\nrequire(\"./arbo.js\");\n\nmodule.exports = EThing;"],"sourceRoot":""}